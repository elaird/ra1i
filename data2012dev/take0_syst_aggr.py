from data import data
import utils
"HCP MC and g ID; 2D MC dist"

def common1(x) :
    x._lumi =  	{
        "mumu": 1.871e+04 ,
        "muon": 1.871e+04 ,
        "phot": 1.873e+04 ,
        "had" : 1.873e+04 ,

        "mcMuon": 1.139e+04,
        "mcMumu": 1.139e+04,
        "mcPhot": 1.157e+04,
        "mcHad" : 1.166e+04,
	}

    x._triggerEfficiencies = {
        "hadBulk":       (1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000),
        "muon":          (0.880, 0.880, 0.880, 0.880, 0.880, 0.880, 0.880, 0.880),
        "phot":          (1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000),
        "mumu":          (0.950, 0.960, 0.960, 0.970, 0.970, 0.970, 0.980, 0.980),
        }

    x._htBinLowerEdges = (275.0, 325.0, 375.0, 475.0, 575.0, 675.0, 775.0, 875.0)
    x._htMaxForPlot    = 975.0
    x._htMeans         = (298.0, 348.0, 416.0, 517.0, 617.0, 719.0, 819.0, 1044.)

    x._observations["nPhot"] = tuple([None, None]+list(x._observations["nPhot"][2:]))

def common(x) :
    common1(x)

    #systBins = tuple([0]*4+[1]*2+[2]*2)
    #systBins = tuple([0,1]+[2]*2+[3]*2+[4]*2)
    #systBins = tuple([0] + [1]*3 + [2]*1 + [3]*2 + [4])
    systBins = tuple([0]*3 + [1]*2 + [2]*2 + [3])
    

    name = x.__class__.__name__

    if "ge2j" in name :
        systMagnitudes = (0.10, 0.10, 0.20, 0.20, 0.30)
        #x._observations["nHadBulk"] = (653500000, 294800000, 214600000, 72190000, 26470000, 10860000, 4741000, 4718000) #v2 db
        x._triggerEfficiencies["had"] = (0.870, 0.986, 0.994, 1.000, 1.000, 1.000, 1.000, 1.000)
        
    elif "le3j" in name :
        #systMagnitudes = (0.10, 0.20, 0.20)
        #systMagnitudes = (0.10, 0.10, 0.20, 0.20, 0.20)
        #systMagnitudes = (0.05, 0.05, 0.10, 0.20, 0.30)  # tmp
        systMagnitudes = (0.05, 0.05, 0.15, 0.20)
        x._triggerEfficiencies["had"] = (0.891, 0.987, 0.990, 1.000, 1.000, 1.000, 1.000, 1.000)
        x._observations["nHadBulk"] = (559500000, 252400000, 180600000, 51650000, 17060000, 6499000, 2674000, 2501000)
    elif "ge4j" in name :
        #systMagnitudes = (0.10, 0.20, 0.30)
        #systMagnitudes = (0.10, 0.10, 0.20, 0.20, 0.30)
        #systMagnitudes = (0.05, 0.10, 0.10, 0.20, 0.30)  # dtmp
        systMagnitudes = (0.05, 0.15, 0.15, 0.25) 
        x._triggerEfficiencies["had"] = (0.837, 0.982, 0.997, 1.000, 1.000, 1.000, 1.000, 1.000)
        x._observations["nHadBulk"] = ( 93940000, 42330000, 33950000, 20540000,  9410000,  4363000, 2067000, 2217000)

    if "ge4b" in name :
        x._mergeBins = (0, 1, 2, 2, 2, 2, 2, 2)
        systMagnitudes = (0.25,)
        systBins = (0, 0, 0)
    else :
        x._mergeBins = None

    x._systBins = {
        "sigmaPhotZ": systBins,
        "sigmaMuonW": systBins,
        "sigmaMumuZ": systBins,
        }

    x._fixedParameters = {
        "sigmaPhotZ": systMagnitudes,
        "sigmaMuonW": systMagnitudes,
        "sigmaMumuZ": systMagnitudes,
        "k_qcd_nom":2.96e-2,
        "k_qcd_unc_inp":utils.quadSum([0.61e-2, 0.463e-2])
        }

class data_0b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 298.9, 222.3, 118.4, 55.24, 27.14, 18.87, ) ,
		"mcHad"              :   ( 1289.0, 504.9, 393.1, 257.4, 124.9, 57.57, 24.87, 21.38, ) ,
		"mcTtw"              :   ( 825.9, 322.8, 254.1, 157.9, 73.26, 33.82, 13.07, 12.78, ) ,
		"mcMuon"             :   ( 1792.0, 814.5, 901.5, 696.3, 376.5, 198.7, 105.6, 145.3, ) ,
		"mcZinv"             :   ( 463.2, 182.1, 139.0, 99.5, 51.6, 23.74, 11.8, 8.602, ) ,
		"mcMumu"             :   ( 132.7, 64.15, 64.43, 53.81, 33.13, 18.59, 10.48, 15.45, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 74.12, 12.49, 21.45, 9.786, 7.156, 5.231, 3.856, 4.739, ) ,
		"mcMumuErr"          :   ( 4.009, 2.983, 1.49, 1.106, 0.8745, 0.6775, 0.4938, 0.5929, ) ,
		"mcHadErr"           :   ( 44.04, 20.28, 7.384, 5.552, 3.865, 2.546, 1.597, 1.59, ) ,
		"mcZinvErr"          :   ( 7.181, 4.282, 3.357, 2.595, 1.865, 1.227, 0.8755, 0.7129, ) ,
		"mcTtwErr"           :   ( 43.45, 19.83, 6.576, 4.908, 3.386, 2.231, 1.335, 1.421, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 15.86, 13.85, 9.817, 6.848, 4.586, 3.525, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 495.0, 321.0, 168.0, 83.0, 30.0, 28.0, ) ,
		"nHad"               :   ( 1718.0, 734.0, 610.0, 408.0, 205.0, 85.0, 24.0, 40.0, ) ,
		"nMuon"              :   ( 2286.0, 1034.0, 1051.0, 741.0, 425.0, 228.0, 98.0, 139.0, ) ,
		"nMumu"              :   ( 196.0, 76.0, 97.0, 81.0, 46.0, 20.0, 11.0, 15.0, ) ,
	}

        common(self)


class data_0b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 2680.0, 923.1, 314.7, 126.2, 43.1, 34.59, ) ,
		"mcHad"              :   ( 7158.0, 3041.0, 2130.0, 654.8, 229.7, 76.46, 30.72, 22.65, ) ,
		"mcTtw"              :   ( 3740.0, 1484.0, 1037.0, 300.2, 97.45, 30.0, 12.94, 8.3, ) ,
		"mcMuon"             :   ( 1.23e+04, 6540.0, 6231.0, 2587.0, 1102.0, 516.3, 264.7, 332.1, ) ,
		"mcZinv"             :   ( 3418.0, 1557.0, 1093.0, 354.6, 132.3, 46.46, 17.79, 14.35, ) ,
		"mcMumu"             :   ( 1282.0, 720.4, 713.2, 313.7, 136.8, 67.02, 35.06, 44.48, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 144.8, 45.6, 36.27, 28.62, 14.37, 10.0, 7.084, 8.036, ) ,
		"mcMumuErr"          :   ( 10.37, 6.646, 5.074, 2.653, 1.742, 1.207, 0.8817, 0.9961, ) ,
		"mcHadErr"           :   ( 121.4, 34.93, 17.58, 9.045, 5.408, 2.968, 1.884, 1.535, ) ,
		"mcZinvErr"          :   ( 19.47, 12.8, 9.45, 4.99, 3.073, 1.787, 1.111, 0.9916, ) ,
		"mcTtwErr"           :   ( 119.8, 32.5, 14.83, 7.544, 4.45, 2.37, 1.522, 1.172, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 49.68, 27.54, 16.59, 10.67, 5.706, 5.301, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 4147.0, 1317.0, 409.0, 154.0, 49.0, 38.0, ) ,
		"nHad"               :   ( 9950.0, 4563.0, 3261.0, 906.0, 286.0, 97.0, 29.0, 34.0, ) ,
		"nMuon"              :   ( 1.588e+04, 8156.0, 7529.0, 2873.0, 1232.0, 499.0, 239.0, 311.0, ) ,
		"nMumu"              :   ( 2092.0, 1142.0, 1031.0, 357.0, 197.0, 75.0, 38.0, 44.0, ) ,
	}

        common(self)

class data_1b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 49.24, 33.41, 16.15, 10.84, 5.762, 3.414, ) ,
		"mcHad"              :   ( 670.1, 267.1, 216.8, 123.5, 50.97, 22.25, 9.452, 8.546, ) ,
		"mcTtw"              :   ( 596.2, 237.5, 192.7, 106.8, 43.79, 17.71, 6.765, 6.82, ) ,
		"mcMuon"             :   ( 1594.0, 828.7, 890.3, 651.3, 333.9, 164.0, 82.79, 95.6, ) ,
		"mcZinv"             :   ( 73.93, 29.58, 24.17, 16.64, 7.188, 4.545, 2.687, 1.726, ) ,
		"mcMumu"             :   ( 33.42, 15.79, 18.3, 15.42, 9.114, 5.105, 2.336, 3.705, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 13.27, 7.401, 7.988, 6.479, 4.569, 3.224, 2.263, 2.357, ) ,
		"mcMumuErr"          :   ( 1.177, 0.7694, 0.7863, 0.6838, 0.5138, 0.4185, 0.2238, 0.3279, ) ,
		"mcHadErr"           :   ( 8.278, 4.701, 3.667, 2.628, 1.653, 1.015, 0.6376, 0.6604, ) ,
		"mcZinvErr"          :   ( 1.39, 0.8153, 0.6732, 0.5033, 0.3055, 0.2529, 0.2017, 0.1492, ) ,
		"mcTtwErr"           :   ( 8.161, 4.63, 3.604, 2.579, 1.624, 0.9831, 0.6049, 0.6433, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 2.954, 2.265, 1.475, 1.417, 0.9838, 0.6312, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 98.0, 77.0, 30.0, 24.0, 10.0, 5.0, ) ,
		"nHad"               :   ( 851.0, 401.0, 330.0, 174.0, 77.0, 25.0, 20.0, 11.0, ) ,
		"nMuon"              :   ( 2238.0, 1019.0, 994.0, 724.0, 342.0, 161.0, 71.0, 71.0, ) ,
		"nMumu"              :   ( 53.0, 25.0, 32.0, 24.0, 16.0, 3.0, 2.0, 4.0, ) ,
	}

        common(self)


class data_1b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 264.8, 87.08, 25.97, 14.55, 6.41, 4.185, ) ,
		"mcHad"              :   ( 1180.0, 521.6, 371.3, 95.99, 27.41, 10.64, 4.333, 2.61, ) ,
		"mcTtw"              :   ( 834.3, 359.5, 255.1, 59.55, 15.81, 5.18, 1.904, 0.9931, ) ,
		"mcMuon"             :   ( 2942.0, 1695.0, 1537.0, 557.7, 212.1, 89.22, 41.97, 47.21, ) ,
		"mcZinv"             :   ( 346.1, 162.1, 116.2, 36.44, 11.6, 5.456, 2.429, 1.617, ) ,
		"mcMumu"             :   ( 176.1, 102.1, 96.58, 41.14, 16.51, 7.863, 3.636, 4.641, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 17.42, 10.99, 10.11, 6.098, 3.511, 2.153, 1.492, 1.522, ) ,
		"mcMumuErr"          :   ( 2.446, 1.819, 1.55, 0.8598, 0.5041, 0.3111, 0.22, 0.2471, ) ,
		"mcHadErr"           :   ( 12.51, 5.767, 4.339, 1.955, 1.004, 0.5461, 0.3054, 0.192, ) ,
		"mcZinvErr"          :   ( 2.873, 1.903, 1.393, 0.6906, 0.3849, 0.2475, 0.197, 0.1187, ) ,
		"mcTtwErr"           :   ( 12.18, 5.444, 4.109, 1.829, 0.9268, 0.4868, 0.2334, 0.1509, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 6.646, 3.383, 1.816, 1.512, 0.9895, 0.7138, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 483.0, 168.0, 48.0, 15.0, 5.0, 5.0, ) ,
		"nHad"               :   ( 1909.0, 830.0, 551.0, 153.0, 41.0, 9.0, 6.0, 1.0, ) ,
		"nMuon"              :   ( 4323.0, 2336.0, 1981.0, 655.0, 248.0, 87.0, 36.0, 39.0, ) ,
		"nMumu"              :   ( 294.0, 173.0, 153.0, 59.0, 24.0, 12.0, 5.0, 5.0, ) ,
	}

        common(self)


class data_2b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 6.6, 3.363, 2.244, 1.079, 0.492, 0.2497, ) ,
		"mcHad"              :   ( 283.5, 112.8, 91.12, 53.82, 21.77, 8.017, 2.778, 3.1, ) ,
		"mcTtw"              :   ( 272.6, 108.9, 87.6, 51.66, 21.01, 7.473, 2.485, 2.94, ) ,
		"mcMuon"             :   ( 1022.0, 529.9, 554.5, 393.0, 201.1, 93.47, 45.76, 50.01, ) ,
		"mcZinv"             :   ( 10.9, 3.936, 3.525, 2.167, 0.7598, 0.5437, 0.293, 0.1598, ) ,
		"mcMumu"             :   ( 13.17, 5.154, 7.016, 5.283, 2.912, 1.607, 0.4215, 0.789, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 7.08, 5.098, 5.253, 4.379, 3.039, 2.059, 1.361, 1.366, ) ,
		"mcMumuErr"          :   ( 0.8437, 0.4487, 0.5398, 0.4416, 0.3068, 0.2667, 0.08776, 0.1359, ) ,
		"mcHadErr"           :   ( 3.417, 2.228, 2.015, 1.532, 0.9334, 0.5332, 0.3012, 0.3137, ) ,
		"mcZinvErr"          :   ( 0.5865, 0.3133, 0.2658, 0.1788, 0.1037, 0.08016, 0.03399, 0.02027, ) ,
		"mcTtwErr"           :   ( 3.366, 2.206, 1.997, 1.521, 0.9277, 0.5271, 0.2992, 0.313, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 1.241, 0.7824, 0.6264, 0.3005, 0.08767, 0.04805, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 21.0, 21.0, 8.0, 2.0, 3.0, 2.0, ) ,
		"nHad"               :   ( 337.0, 175.0, 143.0, 90.0, 35.0, 9.0, 2.0, 4.0, ) ,
		"nMuon"              :   ( 1400.0, 703.0, 653.0, 465.0, 221.0, 108.0, 38.0, 33.0, ) ,
		"nMumu"              :   ( 17.0, 13.0, 9.0, 11.0, 4.0, 2.0, 3.0, 2.0, ) ,
	}

        common(self)


class data_2b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 19.94, 4.295, 1.42, 0.7744, 0.461, 0.1687, ) ,
		"mcHad"              :   ( 203.5, 95.71, 69.85, 16.46, 4.362, 1.179, 0.2723, 0.1206, ) ,
		"mcTtw"              :   ( 173.2, 81.36, 60.67, 13.63, 3.597, 0.8097, 0.1447, 0.04665, ) ,
		"mcMuon"             :   ( 990.2, 570.8, 506.0, 164.2, 58.11, 22.41, 8.732, 8.137, ) ,
		"mcZinv"             :   ( 30.26, 14.35, 9.178, 2.83, 0.7649, 0.3688, 0.1276, 0.07396, ) ,
		"mcMumu"             :   ( 40.69, 19.04, 16.15, 5.877, 2.234, 0.6862, 0.3239, 0.3496, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 7.385, 5.643, 5.341, 3.036, 1.756, 1.047, 0.6326, 0.5663, ) ,
		"mcMumuErr"          :   ( 1.449, 0.9071, 0.7803, 0.4442, 0.2621, 0.08845, 0.08459, 0.08174, ) ,
		"mcHadErr"           :   ( 2.96, 2.056, 1.818, 0.8659, 0.4516, 0.1738, 0.04789, 0.01836, ) ,
		"mcZinvErr"          :   ( 0.9952, 0.6566, 0.4421, 0.2197, 0.1116, 0.06374, 0.02218, 0.01439, ) ,
		"mcTtwErr"           :   ( 2.788, 1.948, 1.763, 0.8376, 0.4375, 0.1617, 0.04245, 0.0114, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 2.455, 0.8011, 0.5621, 0.2998, 0.1832, 0.03949, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 54.0, 11.0, 4.0, 2.0, 0.0, 1.0, ) ,
		"nHad"               :   ( 336.0, 175.0, 103.0, 20.0, 6.0, 1.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 1393.0, 749.0, 663.0, 189.0, 52.0, 13.0, 5.0, 7.0, ) ,
		"nMumu"              :   ( 66.0, 38.0, 27.0, 8.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)


class data_3b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.3246, 0.1684, 0.09761, 0.0504, 0.02163, 0.009546, ) ,
		"mcHad"              :   ( 28.54, 11.37, 9.232, 6.309, 2.886, 1.002, 0.3519, 0.486, ) ,
		"mcTtw"              :   ( 28.01, 11.18, 9.025, 6.197, 2.853, 0.9625, 0.3362, 0.4779, ) ,
		"mcMuon"             :   ( 113.4, 57.96, 61.2, 46.23, 26.81, 12.77, 6.285, 7.448, ) ,
		"mcZinv"             :   ( 0.5291, 0.1877, 0.2071, 0.1121, 0.03257, 0.0392, 0.01579, 0.008108, ) ,
		"mcMumu"             :   ( 0.9741, 0.3271, 0.4252, 0.3517, 0.1906, 0.111, 0.02679, 0.05087, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 0.9112, 0.6592, 0.6933, 0.6165, 0.5035, 0.335, 0.2242, 0.2466, ) ,
		"mcMumuErr"          :   ( 0.2011, 0.03916, 0.03677, 0.03379, 0.02397, 0.02257, 0.007554, 0.01118, ) ,
		"mcHadErr"           :   ( 0.4115, 0.2702, 0.2477, 0.2232, 0.1537, 0.08355, 0.05153, 0.06332, ) ,
		"mcZinvErr"          :   ( 0.03787, 0.02005, 0.03292, 0.0131, 0.006429, 0.01078, 0.002878, 0.001797, ) ,
		"mcTtwErr"           :   ( 0.4098, 0.2695, 0.2456, 0.2229, 0.1535, 0.08285, 0.05145, 0.06329, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.08303, 0.06414, 0.03444, 0.02226, 0.004296, 0.002182, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 4.0, 3.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 40.0, 23.0, 10.0, 4.0, 3.0, 4.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 133.0, 73.0, 81.0, 63.0, 26.0, 15.0, 7.0, 3.0, ) ,
		"nMumu"              :   ( 0.0, 1.0, 1.0, 2.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)


class data_3b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.3405, 0.05988, 0.02456, 0.004608, 0.01196, 0.002269, ) ,
		"mcHad"              :   ( 8.554, 4.046, 2.991, 0.6779, 0.1755, 0.04041, 0.006062, 0.001754, ) ,
		"mcTtw"              :   ( 7.781, 3.802, 2.792, 0.6335, 0.1649, 0.03308, 0.004176, 0.0009173, ) ,
		"mcMuon"             :   ( 47.13, 26.61, 23.43, 7.229, 2.567, 0.9949, 0.3321, 0.3186, ) ,
		"mcZinv"             :   ( 0.7723, 0.2447, 0.199, 0.04441, 0.01068, 0.007323, 0.001886, 0.0008368, ) ,
		"mcMumu"             :   ( 1.021, 0.3885, 0.444, 0.1433, 0.0522, 0.01446, 0.00702, 0.007169, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 0.4428, 0.3326, 0.3249, 0.1952, 0.09343, 0.07183, 0.03054, 0.02874, ) ,
		"mcMumuErr"          :   ( 0.1018, 0.02478, 0.06053, 0.01534, 0.007988, 0.002787, 0.002619, 0.002504, ) ,
		"mcHadErr"           :   ( 0.1805, 0.1123, 0.1007, 0.0483, 0.0244, 0.00866, 0.002085, 0.0004377, ) ,
		"mcZinvErr"          :   ( 0.09423, 0.01697, 0.02453, 0.005566, 0.00245, 0.002177, 0.0006719, 0.0002135, ) ,
		"mcTtwErr"           :   ( 0.1539, 0.111, 0.09767, 0.04798, 0.02427, 0.008382, 0.001974, 0.0003821, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.07259, 0.02127, 0.01539, 0.0005192, 0.008189, 0.0007174, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 12.0, 5.0, 5.0, 0.0, 1.0, 0.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 78.0, 44.0, 31.0, 12.0, 3.0, 0.0, 1.0, 0.0, ) ,
		"nMumu"              :   ( 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)

class data_ge4b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.004964, 0.003634, 0.001271, 0.0009303, 0.0005284, 0.0002104, ) ,
		"mcHad"              :   ( 0.8827, 0.3437, 0.3083, 0.2769, 0.157, 0.0559, 0.02073, 0.03818, ) ,
		"mcTtw"              :   ( 0.8748, 0.3408, 0.2933, 0.2747, 0.1565, 0.05479, 0.02035, 0.03795, ) ,
		"mcMuon"             :   ( 3.701, 1.845, 2.059, 1.943, 1.393, 0.7205, 0.3682, 0.5029, ) ,
		"mcZinv"             :   ( 0.007878, 0.002844, 0.01503, 0.002173, 0.0005162, 0.001105, 0.0003772, 0.0002296, ) ,
		"mcMumu"             :   ( 0.01855, 0.00581, 0.007428, 0.007374, 0.004237, 0.002798, 0.0007215, 0.001319, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 0.0356, 0.02721, 0.02919, 0.03526, 0.03639, 0.02356, 0.01642, 0.02202, ) ,
		"mcMumuErr"          :   ( 0.005828, 0.0009921, 0.0007191, 0.0008255, 0.0006644, 0.0007823, 0.0002631, 0.0003651, ) ,
		"mcHadErr"           :   ( 0.01519, 0.009656, 0.01583, 0.01332, 0.01035, 0.005973, 0.003884, 0.006168, ) ,
		"mcZinvErr"          :   ( 0.0006964, 0.0003448, 0.01208, 0.0003351, 0.0001322, 0.000396, 7.937e-05, 8.194e-05, ) ,
		"mcTtwErr"           :   ( 0.01518, 0.00965, 0.01024, 0.01332, 0.01035, 0.00596, 0.003883, 0.006167, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.001403, 0.001836, 0.0004764, 0.0004438, 0.0001323, 6.924e-05, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 1.0, 1.0, 1.0, 3.0, 3.0, 0.0, 0.0, 0.0, ) ,
		"nMumu"              :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)
