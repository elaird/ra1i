from configuration.units import fb
from data import data
import utils


def common1(x) :
    x._lumi = {"mumu"               :   19.25/fb,
               "muon"               :   19.25/fb,
               "mcPhot"             :   20.34/fb,
               "mcHad"              :   18.58/fb,
               "mcTtw"              :   18.58/fb,
               "had"                :   18.58/fb,
               "mcMuon"             :   19.25/fb,
               "mcZinv"             :   18.58/fb,
               "mcMumu"             :   19.25/fb,
               "phot"               :   20.34/fb,
               }

    x._triggerEfficiencies = {}
    for key in ["hadBulk", "had", "muon", "phot", "mumu"]:
        x._triggerEfficiencies[key] = tuple([1.0]*11)

    x._htBinLowerEdges = ( 200.0, 275.0, 325.0, 375.0, 475.0, 575.0, 675.0, 775.0, 875.0, 975.0, 1075.0)
    x._htMaxForPlot    = 1175.0
#    x._htMeans         = (240.0, 298.0, 348.0, 416.0, 517.0, 617.0, 719.0, 819.0, 920.0, 1144., )  # tmp
    x._htMeans         = (240.0, 298.0, 348.0, 416.0, 517.0, 617.0, 719.0, 819.0, 920.0, 1020., 1120., )  # tmp

    iPhot = 3
    x._observations["nPhot"] = tuple([None]*iPhot + list(x._observations["nPhot"][iPhot:]))


def common(x) :
    common1(x)

    systBins = tuple([0, 1, 2] + [3]*2 + [4]*2 + [5]*4)  # tmp
    name = x.__class__.__name__

    if "le3j" in name :
        systMagnitudes = (0.10, 0.10, 0.10, 0.20, 0.20, 0.20)  # tmp
        x._observations["nHadBulk"] = (559500000, 559500000, 252400000, 180600000, 51650000,
                                       17060000, 6499000, 2674000, 2501000, 2501000, 2501000)  # tmp
    elif "ge4j" in name :
        systMagnitudes = (0.10, 0.10, 0.10, 0.20, 0.20, 0.30)  # tmp
        x._observations["nHadBulk"] = (93940000, 93940000, 42330000, 33950000, 20540000,
                                       9410000,  4363000, 2067000, 2217000, 2217000, 2217000) # tmp

    if "ge4b" in name :
        x._mergeBins = (0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3)
        systMagnitudes = (0.25,)
        systBins = (0, 0, 0, 0)
    else :
        x._mergeBins = None

    x._systBins = {
        "sigmaPhotZ": systBins,
        "sigmaMuonW": systBins,
        "sigmaMumuZ": systBins,
        }

    x._fixedParameters = {
        "sigmaPhotZ": systMagnitudes,
        "sigmaMuonW": systMagnitudes,
        "sigmaMumuZ": systMagnitudes,
        "k_qcd_nom":2.96e-2,
        "k_qcd_unc_inp":utils.quadSum([0.61e-2, 0.463e-2])
        #"k_qcd_unc_inp":utils.quadSum([2.5*0.61e-2, 2.5*0.463e-2])
        }

class data_0b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  {
            "mcPhot"             :   ( 0.0, 0.0, 0.0, 461.0, 343.1, 177.5, 81.78, 38.65, 18.38, 9.16, 9.743, ) ,
            "mcTtw"              :   ( 393.7, 2.316e+03, 808.7, 590.0, 303.1, 122.1, 45.09, 19.87, 7.158, 4.882, 5.902, ) ,
            "mcHad"              :   ( 546.3, 3.118e+03, 1.117e+03, 822.3, 456.4, 198.5, 79.03, 34.55, 14.59, 8.367, 9.596, ) ,
            "mcMuon"             :   ( 974.8, 3.123e+03, 1.452e+03, 1.528e+03, 1.123e+03, 607.1, 321.1, 173.8, 93.16, 53.61, 70.55, ) ,
            "mcZinv"             :   ( 152.6, 802.7, 307.9, 232.3, 153.4, 76.35, 33.94, 14.67, 7.431, 3.485, 3.694, ) ,
            "mcMumu"             :   ( 73.95, 233.8, 108.3, 106.5, 90.95, 54.2, 30.92, 16.29, 8.822, 5.591, 8.695, ) ,
            }

        self._mcStatError =  {
            "mcMuonErr"          :   ( 27.83, 35.58, 17.1, 15.52, 10.89, 7.841, 5.705, 4.138, 3.058, 2.358, 2.61, ) ,
            "mcMumuErr"          :   ( 6.978, 8.203, 4.512, 2.349, 1.583, 1.329, 0.8659, 0.5996, 0.4473, 0.3476, 0.458, ) ,
            "mcZinvErr"          :   ( 5.39, 9.162, 5.197, 3.287, 1.792, 1.205, 0.783, 0.5093, 0.3697, 0.2523, 0.2599, ) ,
            "mcHadErr"           :   ( 10.34, 21.88, 11.93, 9.13, 5.939, 3.602, 2.107, 1.436, 0.8337, 0.7207, 0.8204, ) ,
            "mcTtwErr"           :   ( 8.829, 19.86, 10.73, 8.518, 5.663, 3.395, 1.956, 1.343, 0.7472, 0.6751, 0.7781, ) ,
            "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 11.25, 8.871, 6.268, 4.19, 2.902, 2.049, 1.489, 1.461, ) ,
            }

        self._observations =  {
            "nPhot"              :   ( 0.0, 0.0, 0.0, 461.0, 343.1, 177.5, 81.78, 38.65, 18.38, 9.16, 9.743, ) ,
            "nHad"               :   ( 546.3, 3.118e+03, 1.117e+03, 822.3, 456.4, 198.5, 79.03, 34.55, 14.59, 8.367, 9.596, ) ,
            "nMuon"              :   ( 974.8, 3.123e+03, 1.452e+03, 1.528e+03, 1.123e+03, 607.1, 321.1, 173.8, 93.16, 53.61, 70.55, ) ,
            "nMumu"              :   ( 73.95, 233.8, 108.3, 106.5, 90.95, 54.2, 30.92, 16.29, 8.822, 5.591, 8.695, ) ,
            }

        common(self)


class data_0b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  {
            "mcPhot"             :   ( 0.0, 0.0, 0.0, 4.064e+03, 1.365e+03, 485.0, 189.2, 69.76, 28.87, 16.83, 15.14, ) ,
            "mcTtw"              :   ( 1.722e+04, 7.861e+03, 3.116e+03, 1.994e+03, 493.6, 143.6, 47.68, 16.28, 8.093, 3.819, 2.657, ) ,
            "mcHad"              :   ( 2.937e+04, 1.333e+04, 5.49e+03, 3.681e+03, 1.014e+03, 323.1, 112.1, 42.53, 19.37, 8.884, 7.197, ) ,
            "mcMuon"             :   ( 5.35e+04, 2.052e+04, 1.12e+04, 1.036e+04, 4.102e+03, 1.724e+03, 809.2, 400.9, 218.0, 115.9, 175.5, ) ,
            "mcZinv"             :   ( 1.216e+04, 5.471e+03, 2.374e+03, 1.686e+03, 520.5, 179.5, 64.47, 26.25, 11.28, 5.065, 4.54, ) ,
            "mcMumu"             :   ( 5.608e+03, 2.221e+03, 1.236e+03, 1.204e+03, 519.6, 226.5, 109.9, 56.05, 30.33, 15.56, 26.31, ) ,
            }

        self._mcStatError =  {
            "mcMuonErr"          :   ( 143.4, 70.32, 44.01, 38.37, 21.7, 13.95, 9.566, 6.692, 4.942, 3.583, 4.425, ) ,
            "mcMumuErr"          :   ( 52.86, 17.93, 11.68, 8.153, 3.585, 2.31, 1.605, 1.144, 0.8644, 0.6124, 0.7758, ) ,
            "mcZinvErr"          :   ( 48.27, 21.88, 13.47, 7.986, 3.244, 1.882, 1.118, 0.7105, 0.4679, 0.3159, 0.3001, ) ,
            "mcHadErr"           :   ( 76.93, 43.61, 25.83, 17.69, 7.819, 4.203, 2.416, 1.439, 0.9943, 0.7018, 0.5948, ) ,
            "mcTtwErr"           :   ( 59.9, 37.72, 22.05, 15.78, 7.115, 3.758, 2.141, 1.251, 0.8774, 0.6266, 0.5136, ) ,
            "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 33.2, 17.89, 10.62, 6.642, 3.955, 2.601, 1.969, 1.94, ) ,
            }

        self._observations =  {
            "nPhot"              :   ( 0.0, 0.0, 0.0, 4.064e+03, 1.365e+03, 485.0, 189.2, 69.76, 28.87, 16.83, 15.14, ) ,
            "nHad"               :   ( 2.937e+04, 1.333e+04, 5.49e+03, 3.681e+03, 1.014e+03, 323.1, 112.1, 42.53, 19.37, 8.884, 7.197, ) ,
            "nMuon"              :   ( 5.35e+04, 2.052e+04, 1.12e+04, 1.036e+04, 4.102e+03, 1.724e+03, 809.2, 400.9, 218.0, 115.9, 175.5, ) ,
            "nMumu"              :   ( 5.608e+03, 2.221e+03, 1.236e+03, 1.204e+03, 519.6, 226.5, 109.9, 56.05, 30.33, 15.56, 26.31, ) ,
            }

        common(self)


class data_1b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  {
            "mcPhot"             :   ( 0.0, 0.0, 0.0, 83.54, 58.2, 30.67, 15.39, 7.245, 3.464, 2.022, 1.516, ) ,
            "mcTtw"              :   ( 278.3, 1.972e+03, 772.9, 581.4, 269.1, 95.59, 29.75, 11.92, 4.815, 2.644, 1.805, ) ,
            "mcHad"              :   ( 299.0, 2.095e+03, 819.9, 619.3, 293.7, 107.7, 36.12, 14.97, 6.094, 3.242, 2.33, ) ,
            "mcMuon"             :   ( 837.1, 2.962e+03, 1.532e+03, 1.603e+03, 1.121e+03, 564.3, 270.2, 134.3, 71.95, 36.1, 47.48, ) ,
            "mcZinv"             :   ( 20.68, 122.8, 47.03, 37.82, 24.64, 12.08, 6.376, 3.05, 1.279, 0.5976, 0.525, ) ,
            "mcMumu"             :   ( 17.88, 59.36, 25.75, 29.98, 24.33, 14.18, 7.757, 4.051, 2.124, 1.706, 2.314, ) ,
            }

        self._mcStatError =  {
            "mcMuonErr"          :   ( 10.96, 20.01, 14.5, 14.53, 11.81, 8.138, 5.558, 3.753, 2.794, 1.89, 2.194, ) ,
            "mcMumuErr"          :   ( 1.402, 2.56, 1.39, 1.385, 1.175, 0.8895, 0.6058, 0.3958, 0.3068, 0.2686, 0.3467, ) ,
            "mcZinvErr"          :   ( 1.043, 2.024, 1.032, 0.6939, 0.3913, 0.2542, 0.1845, 0.1323, 0.08349, 0.0503, 0.04255, ) ,
            "mcHadErr"           :   ( 6.159, 16.28, 10.17, 8.723, 5.695, 3.342, 1.673, 1.129, 0.6971, 0.4293, 0.3537, ) ,
            "mcTtwErr"           :   ( 6.07, 16.16, 10.12, 8.695, 5.681, 3.332, 1.663, 1.122, 0.6921, 0.4264, 0.3511, ) ,
            "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 2.63, 2.0, 1.426, 0.9545, 0.6209, 0.5122, 0.3725, 0.2943, ) ,
            }

        self._observations =  {
            "nPhot"              :   ( 0.0, 0.0, 0.0, 83.54, 58.2, 30.67, 15.39, 7.245, 3.464, 2.022, 1.516, ) ,
            "nHad"               :   ( 299.0, 2.095e+03, 819.9, 619.3, 293.7, 107.7, 36.12, 14.97, 6.094, 3.242, 2.33, ) ,
            "nMuon"              :   ( 837.1, 2.962e+03, 1.532e+03, 1.603e+03, 1.121e+03, 564.3, 270.2, 134.3, 71.95, 36.1, 47.48, ) ,
            "nMumu"              :   ( 17.88, 59.36, 25.75, 29.98, 24.33, 14.18, 7.757, 4.051, 2.124, 1.706, 2.314, ) ,
            }

        common(self)


class data_1b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  {
            "mcPhot"             :   ( 0.0, 0.0, 0.0, 420.2, 135.0, 45.24, 20.74, 7.285, 2.923, 1.694, 1.361, ) ,
            "mcTtw"              :   ( 4.06e+03, 2.282e+03, 961.1, 594.1, 118.8, 26.59, 8.177, 2.412, 0.8629, 0.4365, 0.3035, ) ,
            "mcHad"              :   ( 5.072e+03, 2.81e+03, 1.191e+03, 762.0, 169.0, 43.04, 14.85, 5.241, 1.995, 0.9067, 0.6319, ) ,
            "mcMuon"             :   ( 1.287e+04, 5.347e+03, 3.01e+03, 2.66e+03, 901.1, 345.7, 145.7, 69.04, 33.92, 18.88, 26.76, ) ,
            "mcZinv"             :   ( 1.013e+03, 528.1, 229.9, 168.0, 50.2, 16.45, 6.673, 2.829, 1.132, 0.4703, 0.3284, ) ,
            "mcMumu"             :   ( 720.2, 296.8, 162.6, 150.8, 59.68, 25.32, 11.71, 5.816, 2.795, 2.227, 2.638, ) ,
            }

        self._mcStatError =  {
            "mcMuonErr"          :   ( 43.75, 29.93, 19.85, 18.21, 10.13, 5.932, 3.748, 2.512, 1.729, 1.206, 1.429, ) ,
            "mcMumuErr"          :   ( 9.458, 4.708, 3.311, 2.745, 1.43, 0.8886, 0.5233, 0.3585, 0.1945, 0.3472, 0.1338, ) ,
            "mcZinvErr"          :   ( 7.318, 3.645, 2.157, 1.296, 0.528, 0.296, 0.1749, 0.1156, 0.07176, 0.04276, 0.03102, ) ,
            "mcHadErr"           :   ( 24.81, 17.6, 11.4, 8.708, 3.725, 1.605, 0.7404, 0.4018, 0.1944, 0.1119, 0.09963, ) ,
            "mcTtwErr"           :   ( 23.71, 17.22, 11.19, 8.611, 3.688, 1.577, 0.7195, 0.3848, 0.1807, 0.1034, 0.09468, ) ,
            "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 5.608, 2.871, 1.602, 1.141, 0.6225, 0.4692, 0.2775, 0.2729, ) ,
            }

        self._observations =  {
            "nPhot"              :   ( 0.0, 0.0, 0.0, 420.2, 135.0, 45.24, 20.74, 7.285, 2.923, 1.694, 1.361, ) ,
            "nHad"               :   ( 5.072e+03, 2.81e+03, 1.191e+03, 762.0, 169.0, 43.04, 14.85, 5.241, 1.995, 0.9067, 0.6319, ) ,
            "nMuon"              :   ( 1.287e+04, 5.347e+03, 3.01e+03, 2.66e+03, 901.1, 345.7, 145.7, 69.04, 33.92, 18.88, 26.76, ) ,
            "nMumu"              :   ( 720.2, 296.8, 162.6, 150.8, 59.68, 25.32, 11.71, 5.816, 2.795, 2.227, 2.638, ) ,
            }

        common(self)


class data_2b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  {
            "mcPhot"             :   ( 0.0, 0.0, 0.0, 12.23, 7.51, 4.245, 2.068, 1.095, 0.2865, 0.417, 0.149, ) ,
            "mcTtw"              :   ( 115.6, 892.0, 366.3, 275.5, 136.6, 47.08, 12.77, 4.466, 2.75, 1.07, 0.7844, ) ,
            "mcHad"              :   ( 118.4, 909.9, 373.5, 281.6, 140.3, 48.8, 13.65, 4.936, 2.929, 1.139, 0.8182, ) ,
            "mcMuon"             :   ( 507.5, 1.881e+03, 978.5, 1.01e+03, 697.7, 350.5, 154.2, 72.21, 39.47, 18.93, 23.18, ) ,
            "mcZinv"             :   ( 2.809, 17.88, 7.177, 6.042, 3.648, 1.724, 0.8859, 0.4703, 0.1797, 0.06875, 0.03376, ) ,
            "mcMumu"             :   ( 5.837, 22.98, 9.19, 12.18, 10.04, 5.468, 2.155, 1.033, 0.6246, 0.6032, 0.4026, ) ,
            }

        self._mcStatError =  {
            "mcMuonErr"          :   ( 7.573, 14.49, 10.53, 10.7, 8.657, 5.939, 3.821, 2.464, 1.878, 1.243, 1.352, ) ,
            "mcMumuErr"          :   ( 0.7724, 1.573, 0.9369, 1.041, 0.9528, 0.6755, 0.3868, 0.2446, 0.2025, 0.1708, 0.1027, ) ,
            "mcZinvErr"          :   ( 0.2975, 0.7136, 0.4046, 0.2897, 0.1425, 0.09432, 0.06068, 0.04845, 0.03455, 0.01302, 0.005319, ) ,
            "mcHadErr"           :   ( 3.3, 9.157, 5.978, 5.129, 3.552, 2.05, 0.9083, 0.588, 0.5368, 0.2254, 0.1971, ) ,
            "mcTtwErr"           :   ( 3.286, 9.13, 5.964, 5.121, 3.549, 2.048, 0.9062, 0.586, 0.5357, 0.225, 0.197, ) ,
            "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.9803, 0.634, 0.4884, 0.3218, 0.2686, 0.07253, 0.1448, 0.04369, ) ,
            }

        self._observations =  {
            "nPhot"              :   ( 0.0, 0.0, 0.0, 12.23, 7.51, 4.245, 2.068, 1.095, 0.2865, 0.417, 0.149, ) ,
            "nHad"               :   ( 118.4, 909.9, 373.5, 281.6, 140.3, 48.8, 13.65, 4.936, 2.929, 1.139, 0.8182, ) ,
            "nMuon"              :   ( 507.5, 1.881e+03, 978.5, 1.01e+03, 697.7, 350.5, 154.2, 72.21, 39.47, 18.93, 23.18, ) ,
            "nMumu"              :   ( 5.837, 22.98, 9.19, 12.18, 10.04, 5.468, 2.155, 1.033, 0.6246, 0.6032, 0.4026, ) ,
            }

        common(self)


class data_2b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  {
            "mcPhot"             :   ( 0.0, 0.0, 0.0, 29.75, 10.44, 3.189, 1.347, 0.3258, 0.139, 0.2229, 0.0316, ) ,
            "mcTtw"              :   ( 649.2, 568.9, 252.8, 158.8, 32.45, 6.874, 1.721, 0.5344, 0.02447, 0.01297, 0.007767, ) ,
            "mcHad"              :   ( 738.0, 617.9, 274.3, 173.9, 36.61, 8.21, 2.152, 0.7429, 0.1064, 0.03507, 0.01899, ) ,
            "mcMuon"             :   ( 4.036e+03, 1.885e+03, 1.065e+03, 950.2, 294.3, 103.0, 39.11, 14.65, 6.743, 3.999, 4.561, ) ,
            "mcZinv"             :   ( 88.82, 49.0, 21.49, 15.01, 4.165, 1.337, 0.4309, 0.2085, 0.08196, 0.0221, 0.01122, ) ,
            "mcMumu"             :   ( 190.5, 73.5, 35.51, 28.31, 9.621, 4.127, 1.013, 0.6784, 0.1778, 0.1885, 0.1564, ) ,
            }

        self._mcStatError =  {
            "mcMuonErr"          :   ( 22.05, 15.06, 11.36, 10.83, 5.855, 3.453, 2.043, 1.2, 0.7521, 0.5914, 0.5588, ) ,
            "mcMumuErr"          :   ( 5.165, 2.86, 1.906, 1.618, 0.8727, 0.5965, 0.1561, 0.1947, 0.0592, 0.08785, 0.02607, ) ,
            "mcZinvErr"          :   ( 2.225, 1.152, 0.6976, 0.4258, 0.1567, 0.08828, 0.0391, 0.03318, 0.02255, 0.006936, 0.003562, ) ,
            "mcHadErr"           :   ( 7.894, 7.443, 5.06, 4.022, 1.847, 0.8131, 0.343, 0.305, 0.02375, 0.008036, 0.004706, ) ,
            "mcTtwErr"           :   ( 7.574, 7.353, 5.012, 3.999, 1.841, 0.8083, 0.3408, 0.3032, 0.007456, 0.004059, 0.003076, ) ,
            "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 1.487, 0.8004, 0.44, 0.2608, 0.09943, 0.07215, 0.1305, 0.008591, ) ,
            }

        self._observations =  {
            "nPhot"              :   ( 0.0, 0.0, 0.0, 29.75, 10.44, 3.189, 1.347, 0.3258, 0.139, 0.2229, 0.0316, ) ,
            "nHad"               :   ( 738.0, 617.9, 274.3, 173.9, 36.61, 8.21, 2.152, 0.7429, 0.1064, 0.03507, 0.01899, ) ,
            "nMuon"              :   ( 4.036e+03, 1.885e+03, 1.065e+03, 950.2, 294.3, 103.0, 39.11, 14.65, 6.743, 3.999, 4.561, ) ,
            "nMumu"              :   ( 190.5, 73.5, 35.51, 28.31, 9.621, 4.127, 1.013, 0.6784, 0.1778, 0.1885, 0.1564, ) ,
            }

        common(self)


class data_3b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  {
            "mcPhot"             :   ( 0.0, 0.0, 0.0, 0.6235, 0.4046, 0.3056, 0.1111, 0.06753, 0.00797, 0.06408, 0.005053, ) ,
            "mcTtw"              :   ( 9.969, 85.36, 37.28, 28.92, 16.02, 6.057, 1.587, 0.5762, 0.2886, 0.2318, 0.1552, ) ,
            "mcHad"              :   ( 10.09, 86.26, 37.59, 29.2, 16.21, 6.136, 1.642, 0.614, 0.3062, 0.2361, 0.1564, ) ,
            "mcMuon"             :   ( 48.91, 191.4, 98.12, 102.0, 75.43, 40.61, 18.69, 8.419, 5.085, 2.2, 2.862, ) ,
            "mcZinv"             :   ( 0.1178, 0.8942, 0.311, 0.2789, 0.1922, 0.07875, 0.05488, 0.03779, 0.01763, 0.004324, 0.001186, ) ,
            "mcMumu"             :   ( 0.3729, 1.599, 0.6611, 0.9058, 0.7219, 0.4018, 0.1268, 0.06343, 0.1197, 0.0499, 0.02491, ) ,
            }

        self._mcStatError =  {
            "mcMuonErr"          :   ( 1.141, 2.253, 1.678, 1.715, 1.44, 1.049, 0.7037, 0.4456, 0.3568, 0.2368, 0.2903, ) ,
            "mcMumuErr"          :   ( 0.1063, 0.2381, 0.1564, 0.1951, 0.15, 0.1032, 0.02732, 0.02347, 0.09871, 0.01943, 0.007656, ) ,
            "mcZinvErr"          :   ( 0.0418, 0.0931, 0.03767, 0.02311, 0.01431, 0.007225, 0.008257, 0.009903, 0.01127, 0.001354, 0.0003388, ) ,
            "mcHadErr"           :   ( 0.5082, 1.399, 0.9548, 0.8259, 0.6253, 0.4064, 0.1449, 0.1411, 0.1265, 0.07041, 0.04148, ) ,
            "mcTtwErr"           :   ( 0.5065, 1.396, 0.9541, 0.8256, 0.6251, 0.4063, 0.1447, 0.1408, 0.126, 0.0704, 0.04148, ) ,
            "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.1083, 0.07692, 0.09781, 0.02897, 0.02508, 0.002684, 0.03382, 0.001887, ) ,
            }

        self._observations =  {
            "nPhot"              :   ( 0.0, 0.0, 0.0, 0.6235, 0.4046, 0.3056, 0.1111, 0.06753, 0.00797, 0.06408, 0.005053, ) ,
            "nHad"               :   ( 10.09, 86.26, 37.59, 29.2, 16.21, 6.136, 1.642, 0.614, 0.3062, 0.2361, 0.1564, ) ,
            "nMuon"              :   ( 48.91, 191.4, 98.12, 102.0, 75.43, 40.61, 18.69, 8.419, 5.085, 2.2, 2.862, ) ,
            "nMumu"              :   ( 0.3729, 1.599, 0.6611, 0.9058, 0.7219, 0.4018, 0.1268, 0.06343, 0.1197, 0.0499, 0.02491, ) ,
            }

        common(self)


class data_3b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  {
            "mcPhot"             :   ( 0.0, 0.0, 0.0, 0.5435, 0.1839, 0.06918, 0.01661, 0.0043, 0.06213, 0.002897, 0.0002185, ) ,
            "mcTtw"              :   ( 20.23, 26.3, 12.1, 8.42, 1.795, 0.4528, 0.1718, 0.03776, 0.0001535, 6.862e-05, 5.744e-05, ) ,
            "mcHad"              :   ( 20.97, 27.41, 12.55, 8.692, 1.864, 0.4885, 0.1883, 0.0411, 0.0008091, 0.0002042, 0.0001161, ) ,
            "mcMuon"             :   ( 162.7, 90.23, 48.88, 43.52, 14.01, 4.954, 1.822, 0.5689, 0.2431, 0.1122, 0.1727, ) ,
            "mcZinv"             :   ( 0.7428, 1.111, 0.4458, 0.2725, 0.06857, 0.0357, 0.01646, 0.003332, 0.0006556, 0.0001356, 5.862e-05, ) ,
            "mcMumu"             :   ( 2.732, 1.48, 0.8487, 0.91, 0.2466, 0.06031, 0.01745, 0.03709, 0.002197, 0.00222, 0.006036, ) ,
            }

        self._mcStatError =  {
            "mcMuonErr"          :   ( 1.992, 1.54, 1.167, 1.088, 0.6166, 0.3801, 0.2083, 0.1001, 0.05658, 0.04091, 0.04025, ) ,
            "mcMumuErr"          :   ( 0.2732, 0.1729, 0.1839, 0.2099, 0.07263, 0.01026, 0.003968, 0.01777, 0.001053, 0.001107, 0.004515, ) ,
            "mcZinvErr"          :   ( 0.0751, 0.123, 0.06567, 0.02473, 0.008484, 0.01088, 0.007773, 0.0007092, 0.0002235, 3.874e-05, 1.561e-05, ) ,
            "mcHadErr"           :   ( 0.6279, 0.7492, 0.4858, 0.4365, 0.201, 0.1018, 0.08963, 0.03146, 0.0002271, 4.741e-05, 2.993e-05, ) ,
            "mcTtwErr"           :   ( 0.6234, 0.7391, 0.4813, 0.4358, 0.2008, 0.1012, 0.0893, 0.03145, 4.001e-05, 2.732e-05, 2.554e-05, ) ,
            "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.07977, 0.03477, 0.02049, 0.004979, 0.002285, 0.06169, 0.002557, 7.844e-05, ) ,
            }

        self._observations =  {
            "nPhot"              :   ( 0.0, 0.0, 0.0, 0.5435, 0.1839, 0.06918, 0.01661, 0.0043, 0.06213, 0.002897, 0.0002185, ) ,
            "nHad"               :   ( 20.97, 27.41, 12.55, 8.692, 1.864, 0.4885, 0.1883, 0.0411, 0.0008091, 0.0002042, 0.0001161, ) ,
            "nMuon"              :   ( 162.7, 90.23, 48.88, 43.52, 14.01, 4.954, 1.822, 0.5689, 0.2431, 0.1122, 0.1727, ) ,
            "nMumu"              :   ( 2.732, 1.48, 0.8487, 0.91, 0.2466, 0.06031, 0.01745, 0.03709, 0.002197, 0.00222, 0.006036, ) ,
            }

        common(self)


class data_ge4b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  {
            "mcPhot"             :   ( 0.0, 0.0, 0.0, 0.008221, 0.005566, 0.008525, 0.002055, 0.00133, 7.662e-05, 0.005237, 6.369e-05, ) ,
            "mcTtw"              :   ( 0.1728, 1.816, 0.9074, 0.6796, 0.5515, 0.263, 0.07262, 0.02023, 0.002404, 0.04345, 0.01488, ) ,
            "mcHad"              :   ( 0.1739, 1.827, 0.9118, 0.685, 0.5552, 0.2643, 0.07393, 0.02141, 0.002708, 0.04355, 0.0149, ) ,
            "mcMuon"             :   ( 0.9544, 4.083, 2.166, 2.457, 2.398, 1.513, 0.7663, 0.4196, 0.2516, 0.1372, 0.1417, ) ,
            "mcZinv"             :   ( 0.001085, 0.01079, 0.004398, 0.005385, 0.003702, 0.001317, 0.001313, 0.001181, 0.0003047, 9.965e-05, 2.009e-05, ) ,
            "mcMumu"             :   ( 0.005276, 0.04693, 0.02812, 0.03317, 0.01447, 0.01424, 0.00222, 0.001311, 0.002042, 0.001316, 0.0005777, ) ,
            }

        self._mcStatError =  {
            "mcMuonErr"          :   ( 0.05242, 0.1175, 0.09316, 0.1081, 0.1102, 0.08645, 0.05372, 0.05256, 0.03698, 0.02962, 0.02138, ) ,
            "mcMumuErr"          :   ( 0.002102, 0.02634, 0.01732, 0.02284, 0.004317, 0.006832, 0.0005658, 0.0007186, 0.001788, 0.0007201, 0.0002006, ) ,
            "mcZinvErr"          :   ( 0.0006031, 0.001597, 0.001332, 0.001478, 0.0005939, 0.000236, 0.0003507, 0.0006052, 0.0002186, 4.435e-05, 9.351e-06, ) ,
            "mcHadErr"           :   ( 0.01975, 0.07219, 0.06132, 0.04672, 0.04905, 0.03645, 0.01031, 0.006009, 0.001175, 0.02049, 0.005364, ) ,
            "mcTtwErr"           :   ( 0.01974, 0.07218, 0.06131, 0.0467, 0.04905, 0.03645, 0.0103, 0.005978, 0.001155, 0.02049, 0.005364, ) ,
            "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.001968, 0.001432, 0.003282, 0.0006836, 0.0006081, 2.754e-05, 0.003169, 2.894e-05, ) ,
            }

        self._observations =  {
            "nPhot"              :   ( 0.0, 0.0, 0.0, 0.008221, 0.005566, 0.008525, 0.002055, 0.00133, 7.662e-05, 0.005237, 6.369e-05, ) ,
            "nHad"               :   ( 0.1739, 1.827, 0.9118, 0.685, 0.5552, 0.2643, 0.07393, 0.02141, 0.002708, 0.04355, 0.0149, ) ,
            "nMuon"              :   ( 0.9544, 4.083, 2.166, 2.457, 2.398, 1.513, 0.7663, 0.4196, 0.2516, 0.1372, 0.1417, ) ,
            "nMumu"              :   ( 0.005276, 0.04693, 0.02812, 0.03317, 0.01447, 0.01424, 0.00222, 0.001311, 0.002042, 0.001316, 0.0005777, ) ,
            }

        common(self)
