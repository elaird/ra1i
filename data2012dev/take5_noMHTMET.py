from inputData.units import fb
from data import data
import utils


def common1(x) :
    x._lumi =  	{
		"mumu"               :   19.15/fb,
		"muon"               :   19.15/fb,
		"mcPhot"             :   19.18/fb,
		"mcHad"              :   18.33/fb,
		"mcTtw"              :   18.33/fb,
		"had"                :   18.33/fb,
		"mcMuon"             :   19.15/fb,
		"mcZinv"             :   18.33/fb,
		"mcMumu"             :   19.15/fb,
		"phot"               :   19.18/fb,
                }

    x._triggerEfficiencies = {
        "hadBulk":       (0.666, 0.745, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000),
        "muon":          (0.880, 0.880, 0.880, 0.880, 0.880, 0.880, 0.880, 0.880, 0.880, 0.880, 0.880),
        "phot":          (1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000),
        "mumu":          (0.949, 0.952, 0.950, 0.956, 0.953, 0.954, 0.958, 0.959, 0.962, 0.974, 0.953),
        
                }
    x._htBinLowerEdges = ( 200.0, 275.0, 325.0, 375.0, 475.0, 575.0, 675.0, 775.0, 875.0, 975.0, 1075.0)
    x._htMaxForPlot    = 1175.0
    x._htMeans         = ( 235.2, 297.5, 347.5, 416.4, 517.3, 618.4, 716.9, 819.9, 919.0, 1019.0, 1289.0)
    

    iPhot = 3
    x._observations["nPhot"] = tuple([None]*iPhot + list(x._observations["nPhot"][iPhot:]))


def common(x) :
    common1(x)

    systBins = tuple([0]*2 + [1]*3 + [2]*1 + [3]*2 + [4]*3)
    name = x.__class__.__name__


    if "le3j" in name :
        systMagnitudes = (0.05, 0.05, 0.10, 0.20, 0.30)  # tmp
        x._triggerEfficiencies["had"] = (0.816, 0.901, 0.988, 0.994, 1.000, .994, 1.000, 1.000, 1.000, 1.000, 1.000)
        x._observations["nHadBulk"] = (3.4067318E09, 8.317453E08, 3.29919975E08, 2.74138825E08, 8.507427E07,   
                                       2.8887025E07, 1.09110E07, 4.6215E06, 2.07715E06, 1.031125E06, 1.20755E06)

    elif "ge4j" in name :
        systMagnitudes = (0.05, 0.10, 0.10, 0.20, 0.30)  # dtmp
        x._triggerEfficiencies["had"] = (0.665, 0.666, 0.971, 0.988, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000)
        x._observations["nHadBulk"] = (6.60088E07, 1.400533E08, 5.2689525E07, 4.8204025E07, 3.35079E07,
                                       1.582655E07, 7.279475E06, 3.46345E06, 1.732725E06, 8.9562E05, 1.142775E06)

    if "ge4b" in name :
        x._mergeBins = (0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3)
        systMagnitudes = (0.25,)
        systBins = (0, 0, 0, 0)
    else :
        x._mergeBins = None

    x._systBins = {
        "sigmaPhotZ": systBins,
        "sigmaMuonW": systBins,
        "sigmaMumuZ": systBins,
        }

    x._fixedParameters = {
        "sigmaPhotZ": systMagnitudes,
        "sigmaMuonW": systMagnitudes,
        "sigmaMumuZ": systMagnitudes,
        "k_qcd_nom":2.96e-2,
        "k_qcd_unc_inp":utils.quadSum([0.61e-2, 0.463e-2])
        #"k_qcd_unc_inp":utils.quadSum([2.5*0.61e-2, 2.5*0.463e-2])
        }

class data_0b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 420.4, 299.8, 161.4, 72.72, 36.32, 16.15, 7.488, 9.315, ) ,
		"mcTtw"              :   ( 351.5, 2126.0, 737.7, 537.5, 287.0, 119.0, 43.39, 20.79, 8.533, 4.704, 5.989, ) ,
		"mcHad"              :   ( 492.6, 2885.0, 1033.0, 758.7, 437.1, 193.4, 76.76, 35.52, 15.7, 8.158, 9.569, ) ,
		"mcMuon"             :   ( 905.2, 3038.0, 1398.0, 1473.0, 1094.0, 605.8, 317.6, 173.0, 92.13, 53.31, 73.65, ) ,
		"mcZinv"             :   ( 141.1, 759.5, 295.2, 221.2, 150.1, 74.39, 33.37, 14.73, 7.166, 3.454, 3.58, ) ,
		"mcMumu"             :   ( 58.46, 217.4, 104.7, 108.6, 92.44, 54.29, 30.58, 16.48, 9.168, 5.759, 8.636, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 27.49, 38.48, 17.98, 18.33, 10.31, 7.586, 5.498, 4.083, 2.968, 2.23, 2.646, ) ,
		"mcMumuErr"          :   ( 1.952, 3.742, 2.505, 1.983, 1.482, 1.163, 0.8164, 0.5998, 0.4479, 0.3452, 0.4285, ) ,
		"mcZinvErr"          :   ( 4.078, 8.295, 4.819, 3.018, 1.746, 1.176, 0.7656, 0.5065, 0.3569, 0.2451, 0.251, ) ,
		"mcHadErr"           :   ( 13.69, 29.17, 10.88, 8.097, 5.363, 3.39, 2.015, 1.414, 0.9044, 0.6641, 0.7726, ) ,
		"mcTtwErr"           :   ( 13.07, 27.97, 9.75, 7.513, 5.071, 3.179, 1.863, 1.32, 0.831, 0.6173, 0.7307, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 10.24, 7.872, 5.669, 3.758, 2.653, 1.812, 1.219, 1.379, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 447.0, 296.0, 167.0, 81.0, 32.0, 14.0, 7.0, 8.0, ) ,
		"nHad"               :   ( 492.6, 2885.0, 1033.0, 758.7, 437.1, 193.4, 76.76, 35.52, 15.7, 8.158, 9.569, ) ,
		"nMuon"              :   ( 742.0, 2386.0, 1058.0, 1101.0, 755.0, 467.0, 232.0, 113.0, 80.0, 41.0, 47.0, ) ,
		"nMumu"              :   ( 63.0, 191.0, 81.0, 96.0, 87.0, 41.0, 19.0, 8.0, 8.0, 3.0, 2.0, ) ,
	}

        common(self)


class data_0b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 3815.0, 1278.0, 456.3, 175.6, 64.87, 27.59, 15.74, 13.5, ) ,
		"mcTtw"              :   ( 1.726e+04, 7764.0, 3091.0, 2011.0, 514.4, 150.6, 49.02, 18.17, 9.222, 3.831, 3.014, ) ,
		"mcHad"              :   ( 2.914e+04, 1.312e+04, 5411.0, 3696.0, 1037.0, 330.9, 114.2, 45.01, 20.82, 8.933, 7.501, ) ,
		"mcMuon"             :   ( 5.679e+04, 2.174e+04, 1.188e+04, 1.103e+04, 4422.0, 1869.0, 870.7, 436.6, 233.9, 128.9, 189.9, ) ,
		"mcZinv"             :   ( 1.188e+04, 5356.0, 2320.0, 1685.0, 523.1, 180.3, 65.15, 26.84, 11.6, 5.102, 4.487, ) ,
		"mcMumu"             :   ( 5039.0, 2325.0, 1307.0, 1246.0, 536.2, 233.3, 113.5, 58.62, 30.93, 16.21, 27.73, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 151.2, 74.98, 44.99, 40.55, 22.34, 14.48, 9.84, 6.978, 5.093, 3.77, 4.591, ) ,
		"mcMumuErr"          :   ( 18.57, 12.44, 8.849, 6.628, 3.549, 2.315, 1.595, 1.149, 0.8564, 0.6085, 0.7965, ) ,
		"mcZinvErr"          :   ( 37.65, 20.79, 12.69, 7.735, 3.185, 1.848, 1.102, 0.7056, 0.4668, 0.3097, 0.2917, ) ,
		"mcHadErr"           :   ( 90.82, 44.95, 24.71, 17.13, 7.792, 4.201, 2.401, 1.469, 1.035, 0.6807, 0.6021, ) ,
		"mcTtwErr"           :   ( 82.65, 39.85, 21.2, 15.29, 7.112, 3.773, 2.133, 1.288, 0.9234, 0.6061, 0.5267, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 30.6, 16.45, 9.835, 6.054, 3.654, 2.411, 1.8, 1.708, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 4118.0, 1281.0, 447.0, 154.0, 50.0, 20.0, 13.0, 11.0, ) ,
		"nHad"               :   ( 2.914e+04, 1.312e+04, 5411.0, 3696.0, 1037.0, 330.9, 114.2, 45.01, 20.82, 8.933, 7.501, ) ,
		"nMuon"              :   ( 4.511e+04, 1.665e+04, 8725.0, 7957.0, 3095.0, 1353.0, 527.0, 268.0, 128.0, 79.0, 96.0, ) ,
		"nMumu"              :   ( 5390.0, 2171.0, 1172.0, 1063.0, 418.0, 191.0, 84.0, 39.0, 21.0, 11.0, 13.0, ) ,
	}

        common(self)


class data_1b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 73.66, 52.15, 28.11, 14.19, 7.097, 2.975, 1.611, 1.531, ) ,
		"mcTtw"              :   ( 220.6, 1577.0, 625.9, 460.3, 224.9, 78.84, 26.6, 10.01, 4.927, 2.637, 1.966, ) ,
		"mcHad"              :   ( 240.1, 1693.0, 672.1, 496.3, 249.0, 90.62, 33.13, 13.04, 6.16, 3.289, 2.519, ) ,
		"mcMuon"             :   ( 692.7, 2502.0, 1266.0, 1329.0, 933.1, 484.3, 229.8, 114.9, 59.23, 31.43, 40.92, ) ,
		"mcZinv"             :   ( 19.5, 116.0, 46.18, 36.0, 24.07, 11.78, 6.526, 3.035, 1.233, 0.652, 0.5538, ) ,
		"mcMumu"             :   ( 14.27, 51.82, 24.41, 27.05, 23.99, 12.39, 7.645, 3.943, 2.076, 1.349, 2.056, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 8.463, 15.09, 10.92, 10.77, 8.799, 6.188, 4.171, 2.865, 2.046, 1.426, 1.705, ) ,
		"mcMumuErr"          :   ( 0.8022, 1.546, 1.016, 0.9944, 0.9235, 0.5707, 0.4885, 0.3533, 0.2728, 0.1656, 0.2207, ) ,
		"mcZinvErr"          :   ( 0.8033, 1.715, 1.004, 0.6507, 0.3707, 0.2476, 0.1837, 0.1291, 0.07833, 0.05089, 0.0474, ) ,
		"mcHadErr"           :   ( 4.508, 11.92, 7.443, 6.303, 4.293, 2.466, 1.358, 0.7955, 0.6132, 0.4042, 0.3096, ) ,
		"mcTtwErr"           :   ( 4.436, 11.8, 7.375, 6.269, 4.277, 2.454, 1.345, 0.785, 0.6082, 0.401, 0.3059, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 2.32, 1.808, 1.294, 0.8664, 0.6254, 0.4287, 0.2966, 0.2848, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 107.0, 67.0, 36.0, 21.0, 8.0, 3.0, 2.0, 3.0, ) ,
		"nHad"               :   ( 240.1, 1693.0, 672.1, 496.3, 249.0, 90.62, 33.13, 13.04, 6.16, 3.289, 2.519, ) ,
		"nMuon"              :   ( 650.0, 2269.0, 1022.0, 1059.0, 743.0, 336.0, 181.0, 83.0, 37.0, 16.0, 26.0, ) ,
		"nMumu"              :   ( 12.0, 64.0, 27.0, 35.0, 27.0, 16.0, 3.0, 3.0, 4.0, 0.0, 2.0, ) ,
	}

        common(self)


class data_1b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 386.8, 128.8, 42.7, 19.92, 6.929, 2.868, 1.809, 1.447, ) ,
		"mcTtw"              :   ( 3565.0, 1984.0, 830.4, 524.9, 106.8, 24.31, 8.041, 2.652, 1.173, 0.4239, 0.4155, ) ,
		"mcHad"              :   ( 4558.0, 2502.0, 1056.0, 689.9, 158.0, 40.7, 15.01, 5.569, 2.356, 0.9328, 0.7734, ) ,
		"mcMuon"             :   ( 1.186e+04, 4936.0, 2755.0, 2447.0, 851.8, 333.0, 143.9, 63.5, 34.45, 19.39, 25.56, ) ,
		"mcZinv"             :   ( 992.8, 518.0, 225.9, 165.0, 51.16, 16.39, 6.968, 2.917, 1.183, 0.5089, 0.3579, ) ,
		"mcMumu"             :   ( 650.8, 297.7, 161.1, 149.6, 59.56, 24.31, 12.3, 5.534, 2.865, 2.016, 2.705, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 36.31, 23.79, 15.72, 14.31, 8.017, 4.869, 3.097, 1.954, 1.488, 1.103, 1.119, ) ,
		"mcMumuErr"          :   ( 5.381, 3.495, 2.456, 2.084, 1.107, 0.6139, 0.4188, 0.2718, 0.1769, 0.2313, 0.1361, ) ,
		"mcZinvErr"          :   ( 5.901, 3.45, 2.065, 1.228, 0.5238, 0.2807, 0.1773, 0.118, 0.07531, 0.04214, 0.03604, ) ,
		"mcHadErr"           :   ( 20.39, 13.5, 8.634, 6.669, 2.817, 1.21, 0.603, 0.3717, 0.2332, 0.09629, 0.1233, ) ,
		"mcTtwErr"           :   ( 19.51, 13.05, 8.384, 6.555, 2.768, 1.177, 0.5763, 0.3525, 0.2207, 0.08657, 0.1179, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 5.092, 2.698, 1.515, 1.018, 0.6141, 0.4403, 0.2903, 0.2949, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 517.0, 165.0, 41.0, 19.0, 3.0, 6.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 4558.0, 2502.0, 1056.0, 689.9, 158.0, 40.7, 15.01, 5.569, 2.356, 0.9328, 0.7734, ) ,
		"nMuon"              :   ( 1.122e+04, 4511.0, 2388.0, 2103.0, 684.0, 252.0, 96.0, 46.0, 18.0, 11.0, 15.0, ) ,
		"nMumu"              :   ( 724.0, 327.0, 170.0, 172.0, 64.0, 27.0, 11.0, 6.0, 4.0, 1.0, 1.0, ) ,
	}

        common(self)


class data_2b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 10.31, 6.767, 3.937, 2.05, 0.9557, 0.2426, 0.2688, 0.187, ) ,
		"mcTtw"              :   ( 89.17, 698.7, 283.7, 208.1, 109.2, 35.39, 11.85, 3.449, 2.654, 0.934, 0.7728, ) ,
		"mcHad"              :   ( 91.52, 715.0, 290.6, 213.8, 112.7, 36.99, 12.79, 3.892, 2.824, 1.02, 0.8176, ) ,
		"mcMuon"             :   ( 409.8, 1536.0, 794.8, 819.0, 562.4, 288.8, 129.0, 60.72, 31.74, 15.01, 18.58, ) ,
		"mcZinv"             :   ( 2.354, 16.29, 6.944, 5.748, 3.514, 1.602, 0.9387, 0.4431, 0.1702, 0.086, 0.04478, ) ,
		"mcMumu"             :   ( 5.01, 19.74, 8.686, 10.34, 8.757, 4.262, 2.075, 0.8804, 0.6767, 0.4282, 0.3774, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 5.442, 10.51, 7.701, 7.76, 6.304, 4.377, 2.864, 1.854, 1.346, 0.8806, 1.031, ) ,
		"mcMumuErr"          :   ( 0.5476, 1.115, 0.7851, 0.7878, 0.7054, 0.455, 0.2943, 0.1659, 0.2281, 0.1174, 0.09249, ) ,
		"mcZinvErr"          :   ( 0.2365, 0.6186, 0.3825, 0.271, 0.1346, 0.08724, 0.06211, 0.04388, 0.03018, 0.0158, 0.009937, ) ,
		"mcHadErr"           :   ( 2.323, 6.515, 4.204, 3.575, 2.589, 1.37, 0.7518, 0.4111, 0.4947, 0.1829, 0.1639, ) ,
		"mcTtwErr"           :   ( 2.311, 6.485, 4.187, 3.565, 2.585, 1.367, 0.7492, 0.4087, 0.4938, 0.1822, 0.1636, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.8444, 0.5928, 0.448, 0.3228, 0.2074, 0.05693, 0.09779, 0.07513, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 20.0, 17.0, 10.0, 0.0, 1.0, 3.0, 0.0, 1.0, ) ,
		"nHad"               :   ( 91.52, 715.0, 290.6, 213.8, 112.7, 36.99, 12.79, 3.892, 2.824, 1.02, 0.8176, ) ,
		"nMuon"              :   ( 382.0, 1425.0, 725.0, 701.0, 493.0, 237.0, 110.0, 41.0, 23.0, 4.0, 16.0, ) ,
		"nMumu"              :   ( 10.0, 17.0, 12.0, 12.0, 12.0, 4.0, 3.0, 3.0, 1.0, 0.0, 2.0, ) ,
	}

        common(self)


class data_2b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 26.96, 10.01, 2.851, 1.304, 0.3187, 0.1805, 0.2101, 0.03592, ) ,
		"mcTtw"              :   ( 542.1, 468.5, 203.8, 129.7, 25.61, 5.243, 1.894, 0.3698, 0.1008, 0.01229, 0.02015, ) ,
		"mcHad"              :   ( 631.8, 515.8, 224.5, 144.4, 29.8, 6.567, 2.371, 0.5945, 0.1851, 0.03631, 0.03524, ) ,
		"mcMuon"             :   ( 3436.0, 1599.0, 904.5, 796.7, 249.5, 90.42, 32.92, 12.46, 6.958, 3.592, 3.753, ) ,
		"mcZinv"             :   ( 89.64, 47.38, 20.7, 14.74, 4.192, 1.324, 0.4767, 0.2247, 0.08435, 0.02402, 0.01509, ) ,
		"mcMumu"             :   ( 161.8, 68.16, 32.33, 26.0, 8.635, 3.188, 1.528, 0.6145, 0.1697, 0.1616, 0.1478, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 16.44, 11.26, 8.505, 8.011, 4.382, 2.598, 1.54, 0.9026, 0.7077, 0.461, 0.4418, ) ,
		"mcMumuErr"          :   ( 3.366, 2.084, 1.464, 1.219, 0.6344, 0.3649, 0.2603, 0.1456, 0.03702, 0.06267, 0.02317, ) ,
		"mcZinvErr"          :   ( 1.886, 1.08, 0.6567, 0.4022, 0.1534, 0.08299, 0.04461, 0.03449, 0.02261, 0.007015, 0.005914, ) ,
		"mcHadErr"           :   ( 5.856, 5.471, 3.629, 2.938, 1.325, 0.5503, 0.3007, 0.21, 0.06559, 0.007929, 0.01112, ) ,
		"mcTtwErr"           :   ( 5.544, 5.363, 3.569, 2.911, 1.316, 0.544, 0.2974, 0.2072, 0.06157, 0.003695, 0.009418, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 1.335, 0.7539, 0.3775, 0.2413, 0.09808, 0.1086, 0.1089, 0.009291, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 33.0, 12.0, 5.0, 0.0, 0.0, 1.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 631.8, 515.8, 224.5, 144.4, 29.8, 6.567, 2.371, 0.5945, 0.1851, 0.03631, 0.03524, ) ,
		"nMuon"              :   ( 3436.0, 1513.0, 807.0, 669.0, 206.0, 63.0, 17.0, 8.0, 4.0, 0.0, 2.0, ) ,
		"nMumu"              :   ( 204.0, 74.0, 37.0, 34.0, 5.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)


class data_3b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 0.6495, 0.3255, 0.2421, 0.1054, 0.05447, 0.007125, 0.03841, 0.007134, ) ,
		"mcTtw"              :   ( 7.482, 67.4, 28.52, 21.08, 12.12, 4.575, 1.651, 0.4331, 0.229, 0.1688, 0.1127, ) ,
		"mcHad"              :   ( 7.582, 68.15, 28.84, 21.34, 12.31, 4.656, 1.714, 0.4665, 0.2424, 0.1749, 0.1147, ) ,
		"mcMuon"             :   ( 39.77, 154.5, 79.53, 83.37, 60.08, 32.99, 14.67, 6.862, 4.353, 1.68, 2.002, ) ,
		"mcZinv"             :   ( 0.1001, 0.7562, 0.3232, 0.2569, 0.1958, 0.08051, 0.06291, 0.03344, 0.01336, 0.006081, 0.002009, ) ,
		"mcMumu"             :   ( 0.3695, 1.133, 0.5914, 0.6012, 0.7053, 0.3233, 0.1635, 0.05349, 0.1153, 0.03747, 0.03526, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 0.807, 1.6, 1.239, 1.263, 1.043, 0.7656, 0.5057, 0.3235, 0.2486, 0.1548, 0.1756, ) ,
		"mcMumuErr"          :   ( 0.1008, 0.1335, 0.1149, 0.1072, 0.1377, 0.1046, 0.0471, 0.01556, 0.06587, 0.01302, 0.01498, ) ,
		"mcZinvErr"          :   ( 0.03071, 0.07571, 0.04301, 0.01994, 0.01492, 0.009435, 0.009151, 0.008064, 0.007002, 0.00183, 0.0007773, ) ,
		"mcHadErr"           :   ( 0.3299, 0.9874, 0.654, 0.5584, 0.4106, 0.2651, 0.1301, 0.08367, 0.07388, 0.05166, 0.03078, ) ,
		"mcTtwErr"           :   ( 0.3285, 0.9845, 0.6526, 0.5581, 0.4103, 0.2649, 0.1298, 0.08328, 0.07355, 0.05162, 0.03077, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.1434, 0.06416, 0.06093, 0.02558, 0.01808, 0.002236, 0.02322, 0.00382, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 7.582, 68.15, 28.84, 21.34, 12.31, 4.656, 1.714, 0.4665, 0.2424, 0.1749, 0.1147, ) ,
		"nMuon"              :   ( 41.0, 149.0, 73.0, 83.0, 61.0, 22.0, 16.0, 7.0, 1.0, 0.0, 0.0, ) ,
		"nMumu"              :   ( 0.0, 0.0, 0.0, 1.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)


class data_3b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 0.4449, 0.1796, 0.05149, 0.01581, 0.004152, 0.08206, 0.002124, 0.0002571, ) ,
		"mcTtw"              :   ( 15.92, 21.34, 9.918, 6.525, 1.394, 0.3381, 0.1722, 0.01983, 0.0005804, 7.51e-05, 0.0003592, ) ,
		"mcHad"              :   ( 16.67, 22.4, 10.31, 6.792, 1.463, 0.3778, 0.1791, 0.02353, 0.001301, 0.0002317, 0.0004385, ) ,
		"mcMuon"             :   ( 136.7, 73.92, 40.94, 36.36, 11.03, 4.372, 1.425, 0.5997, 0.3265, 0.08589, 0.115, ) ,
		"mcZinv"             :   ( 0.758, 1.064, 0.3899, 0.2667, 0.06886, 0.03966, 0.006949, 0.003698, 0.0007208, 0.0001566, 7.936e-05, ) ,
		"mcMumu"             :   ( 2.302, 1.494, 0.9213, 0.7772, 0.2974, 0.04609, 0.03572, 0.03423, 0.002013, 0.002126, 0.005647, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 1.46, 1.114, 0.8686, 0.8008, 0.4279, 0.2911, 0.1502, 0.1011, 0.07636, 0.02452, 0.0275, ) ,
		"mcMumuErr"          :   ( 0.1957, 0.1394, 0.171, 0.1465, 0.09098, 0.006701, 0.01383, 0.01714, 0.0006995, 0.001027, 0.004262, ) ,
		"mcZinvErr"          :   ( 0.07838, 0.1072, 0.04847, 0.02409, 0.009273, 0.01059, 0.0009885, 0.0007673, 0.0002818, 3.185e-05, 2.706e-05, ) ,
		"mcHadErr"           :   ( 0.441, 0.5309, 0.374, 0.3054, 0.1419, 0.06549, 0.06226, 0.01444, 0.0004339, 4.13e-05, 0.0002874, ) ,
		"mcTtwErr"           :   ( 0.434, 0.52, 0.3709, 0.3044, 0.1416, 0.06463, 0.06225, 0.01442, 0.00033, 2.629e-05, 0.0002862, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.0559, 0.03444, 0.01409, 0.004494, 0.002172, 0.08151, 0.001623, 9.241e-05, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 16.67, 22.4, 10.31, 6.792, 1.463, 0.3778, 0.1791, 0.02353, 0.001301, 0.0002317, 0.0004385, ) ,
		"nMuon"              :   ( 139.0, 75.0, 45.0, 32.0, 6.0, 4.0, 2.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nMumu"              :   ( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)


class data_ge4b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 0.009224, 0.004383, 0.006793, 0.001898, 0.001057, 7.473e-05, 0.004304, 0.0001038, ) ,
		"mcTtw"              :   ( 0.1288, 1.522, 0.6422, 0.4851, 0.3821, 0.1965, 0.0992, 0.01719, 0.002597, 0.02575, 0.006924, ) ,
		"mcHad"              :   ( 0.1297, 1.532, 0.6468, 0.4904, 0.3867, 0.1978, 0.1007, 0.01812, 0.002835, 0.0259, 0.006964, ) ,
		"mcMuon"             :   ( 0.8175, 3.317, 1.822, 1.981, 1.888, 1.213, 0.5631, 0.2942, 0.2401, 0.09409, 0.08602, ) ,
		"mcZinv"             :   ( 0.0009397, 0.009675, 0.004619, 0.005259, 0.00463, 0.001239, 0.001528, 0.000925, 0.0002382, 0.0001522, 4.011e-05, ) ,
		"mcMumu"             :   ( 0.00563, 0.03087, 0.01042, 0.01809, 0.01441, 0.01059, 0.003358, 0.001096, 0.002188, 0.001072, 0.0008584, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 0.04618, 0.08996, 0.07723, 0.07943, 0.08083, 0.06486, 0.0433, 0.02911, 0.02664, 0.01778, 0.01202, ) ,
		"mcMumuErr"          :   ( 0.002056, 0.0143, 0.002609, 0.009965, 0.00383, 0.004922, 0.001439, 0.0004731, 0.00138, 0.0005586, 0.0004422, ) ,
		"mcZinvErr"          :   ( 0.000436, 0.001664, 0.001298, 0.00161, 0.001056, 0.0001889, 0.0003932, 0.0003988, 0.0001451, 6.372e-05, 2.439e-05, ) ,
		"mcHadErr"           :   ( 0.01379, 0.05568, 0.03793, 0.03006, 0.03108, 0.02164, 0.01497, 0.004042, 0.000832, 0.01335, 0.002713, ) ,
		"mcTtwErr"           :   ( 0.01378, 0.05565, 0.03791, 0.03001, 0.03106, 0.02163, 0.01497, 0.004022, 0.0008192, 0.01335, 0.002713, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.002614, 0.001219, 0.002595, 0.000606, 0.0004273, 2.486e-05, 0.002754, 6.676e-05, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 0.1297, 1.532, 0.6468, 0.4904, 0.3867, 0.1978, 0.1007, 0.01812, 0.002835, 0.0259, 0.006964, ) ,
		"nMuon"              :   ( 0.0, 4.0, 2.0, 1.0, 4.0, 2.0, 2.0, 0.0, 0.0, 0.0, 1.0, ) ,
		"nMumu"              :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)
