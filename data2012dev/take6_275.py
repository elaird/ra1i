from configuration.units import fb
from data import data
import utils


def common1(x) :
    x._lumi =  	{
		"mumu"               :   19.15/fb,
		"muon"               :   19.15/fb,
		"mcPhot"             :   19.18/fb,
		"mcHad"              :   18.33/fb,
		"mcTtw"              :   18.33/fb,
		"had"                :   18.33/fb,
		"mcMuon"             :   19.15/fb,
		"mcZinv"             :   18.33/fb,
		"mcMumu"             :   19.15/fb,
		"phot"               :   19.18/fb,
                }

    x._triggerEfficiencies = {
        "hadBulk":       (1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000),
        "muon":          (0.880, 0.880, 0.880, 0.880, 0.880, 0.880, 0.880, 0.880, 0.880, 0.880),
        "phot":          (1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000),
        "mumu":          (0.952, 0.950, 0.956, 0.953, 0.954, 0.958, 0.959, 0.962, 0.974, 0.953),
        
                }
    x._htBinLowerEdges = (275.0, 325.0, 375.0, 475.0, 575.0, 675.0, 775.0, 875.0, 975.0, 1075.0)
    x._htMaxForPlot    = 1175.0
    x._htMeans         = (297.5, 347.5, 416.4, 517.3, 618.4, 716.9, 819.9, 919.0, 1019.0, 1289.0)
    

    iPhot = 2
    x._observations["nPhot"] = tuple([None]*iPhot + list(x._observations["nPhot"][iPhot:]))


def common(x) :
    common1(x)

    systBins = tuple([0,1,2,2,3,3,4,4,5,5])
    name = x.__class__.__name__


    if "le3j" in name :
        systMagnitudes = (0.05, 0.05, 0.10, 0.10, 0.20, 0.30)  # tmp
        x._triggerEfficiencies["had"] = (0.901, 0.988, 0.994, 1.000, .994, 1.000, 1.000, 1.000, 1.000, 1.000)
        x._observations["nHadBulk"] = (8.317453E08, 3.29919975E08, 2.74138825E08, 8.507427E07,   
                                       2.8887025E07, 1.09110E07, 4.6215E06, 2.07715E06, 1.031125E06, 1.20755E06)

    elif "ge4j" in name :
        systMagnitudes = (0.05, 0.05, 0.10, 0.10, 0.20, 0.30)  # tmp
        x._triggerEfficiencies["had"] = (0.666, 0.971, 0.988, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000)
        x._observations["nHadBulk"] = (1.400533E08, 5.2689525E07, 4.8204025E07, 3.35079E07,
                                       1.582655E07, 7.279475E06, 3.46345E06, 1.732725E06, 8.9562E05, 1.142775E06)

    if "ge4b" in name :
        x._mergeBins = (0, 1, 2, 3, 3, 3, 3, 3, 3, 3)
        systMagnitudes = (0.25,)
        systBins = (0, 0, 0, 0)
    else :
        x._mergeBins = None

    x._systBins = {
        "sigmaPhotZ": systBins,
        "sigmaMuonW": systBins,
        "sigmaMumuZ": systBins,
        }

    x._fixedParameters = {
        "sigmaPhotZ": systMagnitudes,
        "sigmaMuonW": systMagnitudes,
        "sigmaMumuZ": systMagnitudes,
        "k_qcd_nom":2.96e-2,
        "k_qcd_unc_inp":utils.quadSum([0.61e-2, 0.463e-2])
        #"k_qcd_unc_inp":utils.quadSum([2.5*0.61e-2, 2.5*0.463e-2])
        }

class data_0b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 428.7, 333.4, 155.1, 74.47, 36.5, 16.06, 8.093, 9.516, ) ,
		"mcTtw"              :   ( 260.4, 1421.0, 499.4, 376.0, 220.9, 96.37, 36.42, 18.79, 7.204, 3.806, 5.348, ) ,
		"mcHad"              :   ( 375.1, 2021.0, 734.8, 560.1, 352.0, 163.1, 66.88, 32.37, 13.75, 7.023, 8.656, ) ,
		"mcMuon"             :   ( 895.5, 3043.0, 1412.0, 1463.0, 1073.0, 587.5, 306.1, 166.6, 88.45, 51.49, 69.21, ) ,
		"mcZinv"             :   ( 114.7, 599.6, 235.4, 184.1, 131.1, 66.71, 30.46, 13.58, 6.541, 3.217, 3.308, ) ,
		"mcMumu"             :   ( 65.22, 221.9, 104.3, 100.7, 85.17, 50.1, 28.0, 15.31, 8.178, 5.433, 7.984, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 25.77, 36.26, 17.14, 17.37, 10.23, 7.285, 5.28, 3.904, 2.816, 2.139, 2.489, ) ,
		"mcMumuErr"          :   ( 5.034, 6.849, 4.327, 1.877, 1.4, 1.11, 0.7575, 0.5728, 0.4079, 0.3276, 0.4083, ) ,
		"mcZinvErr"          :   ( 3.432, 6.984, 4.091, 2.614, 1.571, 1.076, 0.7076, 0.4713, 0.3287, 0.2292, 0.233, ) ,
		"mcHadErr"           :   ( 12.23, 18.48, 8.93, 6.781, 4.708, 2.982, 1.82, 1.327, 0.8076, 0.5805, 0.7138, ) ,
		"mcTtwErr"           :   ( 11.73, 17.11, 7.938, 6.257, 4.438, 2.781, 1.677, 1.24, 0.7377, 0.5334, 0.6747, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 31.45, 38.71, 5.997, 4.601, 3.114, 2.066, 1.436, 1.374, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 401.0, 273.0, 150.0, 78.0, 29.0, 13.0, 6.0, 7.0, ) ,
		"nHad"               :   ( 269.0, 1700.0, 692.0, 580.0, 410.0, 216.0, 84.0, 29.0, 15.0, 14.0, 10.0, ) ,
		"nMuon"              :   ( 715.0, 2304.0, 1003.0, 1067.0, 724.0, 455.0, 223.0, 110.0, 78.0, 40.0, 43.0, ) ,
		"nMumu"              :   ( 60.0, 188.0, 76.0, 92.0, 82.0, 39.0, 18.0, 8.0, 8.0, 3.0, 2.0, ) ,
	}

        common(self)


class data_0b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   (0.0, 0.0, 3786.0, 1271.0, 440.0, 169.4, 64.32, 27.05, 14.82, 12.92, ) ,
		"mcTtw"              :   (5573.0, 2302.0, 1525.0, 408.1, 122.3, 40.55, 15.7, 7.732, 3.05, 1.988, ) ,
		"mcHad"              :   (1.006e+04, 4286.0, 3002.0, 880.0, 288.3, 100.8, 40.64, 18.42, 7.808, 6.129, ) ,
		"mcMuon"             :   (2.041e+04, 1.112e+04, 1.014e+04, 4025.0, 1700.0, 791.0, 396.0, 210.2, 116.3, 170.6, ) ,
		"mcZinv"             :   (4484.0, 1984.0, 1478.0, 472.0, 166.0, 60.29, 24.93, 10.69, 4.757, 4.141, ) ,
		"mcMumu"             :   (2195.0, 1220.0, 1150.0, 491.0, 214.1, 104.2, 53.45, 28.55, 14.88, 25.35, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   (70.14, 42.01, 37.59, 20.57, 13.33, 9.044, 6.417, 4.644, 3.454, 4.184, ) ,
		"mcMumuErr"          :   (13.5, 8.35, 6.687, 3.308, 2.162, 1.48, 1.064, 0.8148, 0.5676, 0.7381, ) ,
		"mcZinvErr"          :   (18.3, 11.32, 7.005, 2.926, 1.715, 1.026, 0.6587, 0.4331, 0.2896, 0.2711, ) ,
		"mcHadErr"           :   (35.0, 21.03, 14.69, 6.811, 3.723, 2.146, 1.328, 0.9214, 0.5944, 0.4859, ) ,
		"mcTtwErr"           :   (29.84, 17.72, 12.91, 6.15, 3.304, 1.885, 1.153, 0.8133, 0.5191, 0.4033, ) ,
		"mcPhotErr"          :   (0.0, 0.0, 85.77, 38.97, 10.44, 6.227, 3.803, 2.522, 1.658, 1.568, ) ,
	}

        self._observations =  	{
		"nPhot"              :   (0.0, 0.0, 3786.0, 1190.0, 419.0, 139.0, 48.0, 20.0, 11.0, 10.0, ) ,
		"nHad"               :   (1.012e+04, 4625.0, 3256.0, 926.0, 285.0, 103.0, 38.0, 15.0, 12.0, 8.0, ) ,
		"nMuon"              :   (1.595e+04, 8394.0, 7640.0, 2956.0, 1301.0, 504.0, 263.0, 122.0, 76.0, 94.0, ) ,
		"nMumu"              :   (2078.0, 1140.0, 1028.0, 402.0, 185.0, 82.0, 39.0, 21.0, 11.0, 13.0, ) ,
	}

        common(self)


class data_1b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 92.05, 72.47, 27.48, 14.36, 6.845, 3.022, 1.966, 1.608, ) ,
		"mcTtw"              :   ( 165.3, 1041.0, 403.5, 302.4, 170.4, 66.98, 24.09, 9.265, 4.938, 2.3, 1.958, ) ,
		"mcHad"              :   ( 180.7, 1131.0, 440.4, 332.3, 191.0, 77.62, 30.03, 12.0, 6.137, 2.903, 2.481, ) ,
		"mcMuon"             :   ( 797.5, 2892.0, 1468.0, 1498.0, 1041.0, 541.3, 251.8, 127.0, 65.91, 35.15, 42.0, ) ,
		"mcZinv"             :   ( 15.49, 90.68, 36.89, 29.88, 20.66, 10.64, 5.94, 2.736, 1.198, 0.6031, 0.5228, ) ,
		"mcMumu"             :   ( 15.58, 55.64, 24.57, 27.12, 24.04, 12.22, 7.024, 4.095, 1.723, 1.37, 2.042, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 9.679, 17.67, 12.75, 12.51, 10.16, 7.139, 4.748, 3.296, 2.336, 1.663, 1.811, ) ,
		"mcMumuErr"          :   ( 1.207, 2.348, 1.133, 1.146, 1.061, 0.6447, 0.4858, 0.4299, 0.1846, 0.1992, 0.2618, ) ,
		"mcZinvErr"          :   ( 0.6658, 1.468, 0.8586, 0.5607, 0.3265, 0.2227, 0.1688, 0.1166, 0.07421, 0.04781, 0.04454, ) ,
		"mcHadErr"           :   ( 4.191, 10.44, 6.472, 5.516, 4.027, 2.43, 1.437, 0.8247, 0.6519, 0.3865, 0.335, ) ,
		"mcTtwErr"           :   ( 4.138, 10.33, 6.415, 5.487, 4.014, 2.42, 1.427, 0.8164, 0.6476, 0.3836, 0.332, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 22.23, 18.83, 1.446, 0.9302, 0.6217, 0.4168, 0.4446, 0.2757, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 92.0, 58.0, 35.0, 19.0, 7.0, 2.0, 2.0, 3.0, ) ,
		"nHad"               :   ( 124.0, 788.0, 404.0, 323.0, 178.0, 61.0, 16.0, 20.0, 5.0, 2.0, 2.0, ) ,
		"nMuon"              :   ( 620.0, 2187.0, 977.0, 1008.0, 711.0, 324.0, 175.0, 82.0, 37.0, 13.0, 26.0, ) ,
		"nMumu"              :   ( 12.0, 61.0, 26.0, 34.0, 25.0, 16.0, 3.0, 2.0, 4.0, 0.0, 2.0, ) ,
	}

        common(self)


class data_1b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 397.8, 130.4, 41.46, 18.91, 7.078, 2.929, 1.676, 1.383, ) ,
		"mcTtw"              :   ( 2479.0, 1365.0, 594.3, 398.4, 87.52, 20.91, 7.284, 2.136, 1.138, 0.3852, 0.2761, ) ,
		"mcHad"              :   ( 3280.0, 1784.0, 783.8, 541.2, 133.1, 36.15, 13.67, 4.771, 2.266, 0.8619, 0.6105, ) ,
		"mcMuon"             :   ( 1.263e+04, 5284.0, 2960.0, 2543.0, 872.0, 339.2, 144.5, 63.57, 34.08, 18.72, 24.88, ) ,
		"mcZinv"             :   ( 801.1, 419.3, 189.6, 142.8, 45.54, 15.24, 6.389, 2.635, 1.127, 0.4767, 0.3343, ) ,
		"mcMumu"             :   ( 708.2, 297.3, 158.7, 143.7, 56.8, 23.27, 11.63, 5.308, 2.762, 1.866, 2.536, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 40.93, 25.51, 17.56, 15.74, 8.781, 5.294, 3.318, 2.111, 1.548, 1.142, 1.152, ) ,
		"mcMumuErr"          :   ( 8.221, 3.903, 2.897, 2.288, 1.254, 0.698, 0.4477, 0.3135, 0.1965, 0.2399, 0.1432, ) ,
		"mcZinvErr"          :   ( 5.03, 2.979, 1.796, 1.086, 0.4752, 0.255, 0.1626, 0.1056, 0.06874, 0.04093, 0.0337, ) ,
		"mcHadErr"           :   ( 17.32, 11.91, 7.785, 6.195, 2.764, 1.226, 0.6443, 0.3006, 0.2698, 0.09862, 0.09742, ) ,
		"mcTtwErr"           :   ( 16.57, 11.54, 7.575, 6.1, 2.723, 1.199, 0.6234, 0.2815, 0.2609, 0.08973, 0.09141, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 19.38, 4.075, 1.456, 0.9736, 0.6602, 0.4167, 0.2652, 0.2686, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 477.0, 149.0, 39.0, 13.0, 3.0, 5.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 3211.0, 1929.0, 854.0, 572.0, 139.0, 42.0, 10.0, 5.0, 2.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 1.078e+04, 4344.0, 2290.0, 2031.0, 655.0, 238.0, 93.0, 45.0, 16.0, 11.0, 14.0, ) ,
		"nMumu"              :   ( 703.0, 314.0, 164.0, 162.0, 60.0, 25.0, 10.0, 5.0, 4.0, 1.0, 1.0, ) ,
	}

        common(self)


class data_2b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 10.54, 8.384, 3.534, 1.987, 0.8387, 0.2487, 0.3364, 0.1829, ) ,
		"mcTtw"              :   ( 67.45, 461.1, 183.7, 136.4, 84.04, 31.48, 10.82, 3.21, 3.041, 0.9464, 0.8391, ) ,
		"mcHad"              :   ( 69.27, 473.6, 189.0, 141.1, 86.93, 32.88, 11.67, 3.587, 3.208, 1.032, 0.8814, ) ,
		"mcMuon"             :   ( 479.0, 1786.0, 923.0, 917.9, 633.4, 327.5, 143.7, 67.92, 35.87, 16.9, 19.32, ) ,
		"mcZinv"             :   ( 1.819, 12.5, 5.292, 4.76, 2.893, 1.396, 0.8493, 0.3769, 0.1673, 0.08526, 0.0423, ) ,
		"mcMumu"             :   ( 5.434, 22.17, 9.159, 10.91, 9.492, 4.628, 2.076, 0.9773, 0.4665, 0.4678, 0.373, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 6.421, 12.39, 9.055, 8.926, 7.263, 5.06, 3.269, 2.136, 1.514, 1.001, 1.064, ) ,
		"mcMumuErr"          :   ( 0.6374, 1.32, 0.8606, 0.8969, 0.8197, 0.5361, 0.3341, 0.2014, 0.1501, 0.1393, 0.1057, ) ,
		"mcZinvErr"          :   ( 0.1969, 0.5159, 0.312, 0.2365, 0.1161, 0.07494, 0.05637, 0.037, 0.02842, 0.0172, 0.008995, ) ,
		"mcHadErr"           :   ( 2.199, 5.762, 3.692, 3.147, 2.488, 1.425, 0.8026, 0.4064, 0.5587, 0.2139, 0.188, ) ,
		"mcTtwErr"           :   ( 2.19, 5.739, 3.679, 3.138, 2.485, 1.423, 0.8007, 0.4047, 0.558, 0.2132, 0.1878, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 1.445, 1.367, 0.3838, 0.295, 0.1741, 0.05378, 0.1126, 0.06728, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 18.0, 15.0, 10.0, 0.0, 1.0, 2.0, 0.0, 1.0, ) ,
		"nHad"               :   ( 46.0, 351.0, 161.0, 132.0, 72.0, 39.0, 12.0, 1.0, 2.0, 1.0, 1.0, ) ,
		"nMuon"              :   ( 365.0, 1365.0, 687.0, 673.0, 474.0, 226.0, 105.0, 39.0, 22.0, 4.0, 15.0, ) ,
		"nMumu"              :   ( 10.0, 16.0, 11.0, 11.0, 11.0, 4.0, 3.0, 3.0, 1.0, 0.0, 2.0, ) ,
	}

        common(self)


class data_2b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 42.65, 9.964, 2.561, 1.401, 0.3043, 0.1888, 0.2164, 0.0348, ) ,
		"mcTtw"              :   ( 371.9, 311.2, 143.5, 102.4, 22.37, 4.714, 1.897, 0.0753, 0.1244, 0.01064, 0.007929, ) ,
		"mcHad"              :   ( 442.7, 348.7, 160.2, 114.9, 26.03, 5.88, 2.322, 0.2618, 0.2067, 0.03428, 0.02219, ) ,
		"mcMuon"             :   ( 3917.0, 1827.0, 1029.0, 878.1, 275.1, 100.4, 35.31, 13.64, 7.197, 3.74, 4.125, ) ,
		"mcZinv"             :   ( 70.86, 37.57, 16.73, 12.46, 3.66, 1.167, 0.4246, 0.1865, 0.08231, 0.02364, 0.01426, ) ,
		"mcMumu"             :   ( 182.3, 75.49, 34.22, 26.84, 9.032, 3.41, 1.61, 0.6676, 0.173, 0.1657, 0.1361, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 19.02, 13.01, 9.808, 9.074, 4.981, 2.959, 1.688, 1.021, 0.7345, 0.513, 0.4968, ) ,
		"mcMumuErr"          :   ( 4.26, 2.46, 1.655, 1.375, 0.7401, 0.4365, 0.2927, 0.1764, 0.04163, 0.07374, 0.02086, ) ,
		"mcZinvErr"          :   ( 1.598, 0.9176, 0.5622, 0.354, 0.1375, 0.07182, 0.0396, 0.02843, 0.02134, 0.007633, 0.00539, ) ,
		"mcHadErr"           :   ( 5.211, 4.739, 3.273, 2.799, 1.348, 0.5725, 0.3447, 0.03179, 0.08416, 0.008331, 0.006257, ) ,
		"mcTtwErr"           :   ( 4.96, 4.65, 3.225, 2.777, 1.341, 0.568, 0.3424, 0.01422, 0.08141, 0.003338, 0.003177, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 16.14, 0.9449, 0.3216, 0.3109, 0.08337, 0.1, 0.1173, 0.008638, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 30.0, 10.0, 5.0, 0.0, 0.0, 1.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 367.0, 320.0, 186.0, 104.0, 25.0, 8.0, 1.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 3298.0, 1450.0, 775.0, 647.0, 199.0, 62.0, 15.0, 8.0, 4.0, 0.0, 2.0, ) ,
		"nMumu"              :   ( 193.0, 72.0, 37.0, 34.0, 5.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)


class data_3b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 0.5996, 0.3407, 0.2112, 0.1006, 0.04525, 0.007766, 0.04317, 0.006805, ) ,
		"mcTtw"              :   ( 5.548, 44.47, 18.67, 13.39, 9.354, 4.008, 1.368, 0.4029, 0.2783, 0.1897, 0.1478, ) ,
		"mcHad"              :   ( 5.606, 45.05, 18.92, 13.6, 9.517, 4.079, 1.425, 0.4303, 0.2917, 0.1959, 0.1497, ) ,
		"mcMuon"             :   ( 46.71, 179.2, 91.1, 92.56, 68.43, 37.87, 16.48, 7.475, 5.063, 1.853, 2.237, ) ,
		"mcZinv"             :   ( 0.05752, 0.583, 0.2576, 0.2105, 0.1635, 0.07058, 0.05659, 0.02744, 0.0134, 0.006208, 0.00193, ) ,
		"mcMumu"             :   ( 0.4044, 1.282, 0.6482, 0.6607, 0.7935, 0.3474, 0.1728, 0.0588, 0.081, 0.03925, 0.02249, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 0.9558, 1.883, 1.433, 1.436, 1.22, 0.8908, 0.5785, 0.3749, 0.2945, 0.1689, 0.1893, ) ,
		"mcMumuErr"          :   ( 0.1197, 0.1574, 0.1366, 0.1287, 0.1669, 0.1058, 0.05634, 0.01854, 0.06149, 0.01368, 0.007303, ) ,
		"mcZinvErr"          :   ( 0.01152, 0.06394, 0.03814, 0.01706, 0.01329, 0.007985, 0.008184, 0.006568, 0.006646, 0.001953, 0.0007561, ) ,
		"mcHadErr"           :   ( 0.304, 0.8736, 0.5703, 0.4693, 0.3888, 0.258, 0.1328, 0.07772, 0.09388, 0.0698, 0.04297, ) ,
		"mcTtwErr"           :   ( 0.3037, 0.8713, 0.5691, 0.469, 0.3886, 0.2578, 0.1325, 0.07744, 0.09365, 0.06977, 0.04296, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.1282, 0.06336, 0.05036, 0.023, 0.01451, 0.002296, 0.02441, 0.003368, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 5.0, 43.0, 17.0, 12.0, 12.0, 2.0, 4.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 40.0, 145.0, 68.0, 81.0, 60.0, 21.0, 16.0, 7.0, 1.0, 0.0, 0.0, ) ,
		"nMumu"              :   ( 0.0, 0.0, 0.0, 1.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)


class data_3b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 0.6977, 0.1729, 0.04537, 0.01416, 0.003795, 0.07628, 0.002178, 0.0002545, ) ,
		"mcTtw"              :   ( 11.03, 13.74, 7.145, 5.621, 1.216, 0.3174, 0.1801, 0.0008459, 0.0007157, 6.503e-05, 6.504e-05, ) ,
		"mcHad"              :   ( 11.63, 14.55, 7.452, 5.838, 1.276, 0.3517, 0.1864, 0.003806, 0.001488, 0.0002117, 0.0001438, ) ,
		"mcMuon"             :   ( 157.4, 85.27, 46.55, 40.46, 12.41, 5.014, 1.568, 0.6461, 0.329, 0.08195, 0.1418, ) ,
		"mcZinv"             :   ( 0.5979, 0.817, 0.3068, 0.2165, 0.06013, 0.03428, 0.0063, 0.00296, 0.000772, 0.0001466, 7.877e-05, ) ,
		"mcMumu"             :   ( 2.572, 1.613, 0.9149, 0.8759, 0.3437, 0.04975, 0.03996, 0.03864, 0.002218, 0.00233, 0.004987, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 1.707, 1.297, 1.0, 0.9147, 0.4968, 0.3336, 0.1707, 0.1127, 0.07627, 0.02352, 0.03464, ) ,
		"mcMumuErr"          :   ( 0.2315, 0.1561, 0.182, 0.1764, 0.1109, 0.007564, 0.01702, 0.02037, 0.0008471, 0.001297, 0.003681, ) ,
		"mcZinvErr"          :   ( 0.06849, 0.08903, 0.0392, 0.02002, 0.008453, 0.0089, 0.0008974, 0.0006228, 0.0002936, 3.062e-05, 2.74e-05, ) ,
		"mcHadErr"           :   ( 0.4137, 0.4514, 0.3417, 0.318, 0.1491, 0.06695, 0.07701, 0.0006652, 0.0005363, 3.935e-05, 3.919e-05, ) ,
		"mcTtwErr"           :   ( 0.408, 0.4425, 0.3395, 0.3174, 0.1489, 0.06635, 0.07701, 0.0002338, 0.0004488, 2.472e-05, 2.802e-05, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.3032, 0.03246, 0.01175, 0.003998, 0.001816, 0.07541, 0.001735, 9.078e-05, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 9.0, 14.0, 8.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 129.0, 73.0, 43.0, 31.0, 6.0, 4.0, 2.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nMumu"              :   ( 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)


class data_ge4b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 0.008381, 0.004199, 0.005854, 0.001819, 0.00086, 8.851e-05, 0.004445, 9.58e-05, ) ,
		"mcTtw"              :   ( 0.09694, 0.9918, 0.4176, 0.2927, 0.3072, 0.1654, 0.07323, 0.01598, 0.003278, 0.03529, 0.01107, ) ,
		"mcHad"              :   ( 0.09736, 0.9994, 0.4215, 0.2963, 0.3111, 0.1666, 0.0746, 0.01673, 0.003538, 0.03544, 0.0111, ) ,
		"mcMuon"             :   ( 0.9632, 3.857, 2.077, 2.189, 2.147, 1.403, 0.6467, 0.306, 0.2863, 0.1042, 0.107, ) ,
		"mcZinv"             :   ( 0.0004275, 0.007533, 0.003858, 0.003635, 0.003864, 0.001124, 0.00137, 0.0007493, 0.0002606, 0.0001556, 3.899e-05, ) ,
		"mcMumu"             :   ( 0.006208, 0.03592, 0.01132, 0.02074, 0.01645, 0.01184, 0.003743, 0.00114, 0.001606, 0.00115, 0.0004911, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 0.05472, 0.1059, 0.09119, 0.09031, 0.09323, 0.07508, 0.0493, 0.03275, 0.03221, 0.0193, 0.01487, ) ,
		"mcMumuErr"          :   ( 0.002453, 0.01715, 0.002977, 0.01182, 0.004654, 0.005509, 0.001772, 0.0005121, 0.001335, 0.0006209, 0.0001758, ) ,
		"mcZinvErr"          :   ( 0.0001311, 0.001415, 0.00115, 0.001067, 0.0009292, 0.0001673, 0.00035, 0.000324, 0.0001521, 6.729e-05, 2.401e-05, ) ,
		"mcHadErr"           :   ( 0.01484, 0.04978, 0.03059, 0.01979, 0.03092, 0.01792, 0.01567, 0.00338, 0.001057, 0.02258, 0.004359, ) ,
		"mcTtwErr"           :   ( 0.01484, 0.04976, 0.03057, 0.01976, 0.03091, 0.01792, 0.01567, 0.003365, 0.001046, 0.02258, 0.004359, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.002334, 0.001105, 0.002113, 0.0005472, 0.0003422, 2.824e-05, 0.002787, 5.807e-05, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 0.0, 1.0, 0.0, 2.0, 1.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 0.0, 4.0, 2.0, 1.0, 4.0, 2.0, 2.0, 0.0, 0.0, 0.0, 1.0, ) ,
		"nMumu"              :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)
