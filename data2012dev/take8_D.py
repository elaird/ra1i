from configuration.units import fb
from data import data
import utils


def common1(x) :
    #x._lumi =  	{
    #    "mumu"               :   19.15/fb,
    #    "muon"               :   19.15/fb,
    #    "mcPhot"             :   19.18/fb,
    #    "mcHad"              :   18.33/fb,
    #    "mcTtw"              :   18.33/fb,
    #    "had"                :   18.33/fb,
    #    "mcMuon"             :   19.15/fb,
    #    "mcZinv"             :   18.33/fb,
    #    "mcMumu"             :   19.15/fb,
    #    "phot"               :   19.18/fb,
    #    }
    
    x._lumi =  	{
        "mumu"               :   7.273 ,
        "muon"               :   7.273 ,
        "mcPhot"             :   7.267 ,
        "mcHad"              :   7.287 ,
        "mcTtw"              :   7.287 ,
        "had"                :   7.287 ,
        "mcMuon"             :   7.273 ,
        "mcZinv"             :   7.287 ,
        "mcMumu"             :   7.273 ,
        "phot"               :   7.267 ,

    x._triggerEfficiencies = {
        #"hadBulk":       (0.666, 0.745, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000),
        "hadBulk":       (1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000),
        "muon":          (0.880, 0.880, 0.880, 0.880, 0.880, 0.880, 0.880, 0.880, 0.880, 0.880, 0.880),
        "phot":          (1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000),
        "mumu":          (0.949, 0.952, 0.950, 0.956, 0.953, 0.954, 0.958, 0.959, 0.962, 0.974, 0.953),
        
                }
    x._htBinLowerEdges = ( 200.0, 275.0, 325.0, 375.0, 475.0, 575.0, 675.0, 775.0, 875.0, 975.0, 1075.0)
    x._htMaxForPlot    = 1175.0
    x._htMeans         = ( 235.2, 297.5, 347.5, 416.4, 517.3, 618.4, 716.9, 819.9, 919.0, 1019.0, 1289.0)
    

    iPhot = 3
    x._observations["nPhot"] = tuple([None]*iPhot + list(x._observations["nPhot"][iPhot:]))


def common(x) :
    common1(x)

    systBins = tuple([0]*2 + [1]*3 + [2]*1 + [3]*2 + [4]*3)
#    systBins = tuple([0,1,2,3,3,4,4,5,5,6,6])
    name = x.__class__.__name__


    if "le3j" in name :
        systMagnitudes = (0.05, 0.05, 0.10, 0.20, 0.30)  # tmp
#        systMagnitudes = (0.05, 0.05, 0.05, 0.10, 0.10, 0.20, 0.30)  # tmp
        x._triggerEfficiencies["had"] = (0.816, 0.901, 0.988, 0.994, 1.000, .994, 1.000, 1.000, 1.000, 1.000, 1.000)
        x._observations["nHadBulk"] = (3.4067318E09, 8.317453E08, 3.29919975E08, 2.74138825E08, 8.507427E07,   
                                       2.8887025E07, 1.09110E07, 4.6215E06, 2.07715E06, 1.031125E06, 1.20755E06)

    elif "ge4j" in name :
        systMagnitudes = (0.05, 0.10, 0.10, 0.20, 0.30)  # dtmp
        #systMagnitudes = (0.05, 0.05, 0.05, 0.10, 0.10, 0.20, 0.30)  # tmp
        x._triggerEfficiencies["had"] = (0.665, 0.666, 0.971, 0.988, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000)
        x._observations["nHadBulk"] = (6.60088E07, 1.400533E08, 5.2689525E07, 4.8204025E07, 3.35079E07,
                                       1.582655E07, 7.279475E06, 3.46345E06, 1.732725E06, 8.9562E05, 1.142775E06)

    if "ge4b" in name :
        x._mergeBins = (0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3)
        systMagnitudes = (0.25,)
        systBins = (0, 0, 0, 0)
    else :
        x._mergeBins = None

    x._systBins = {
        "sigmaPhotZ": systBins,
        "sigmaMuonW": systBins,
        "sigmaMumuZ": systBins,
        }

    x._fixedParameters = {
        "sigmaPhotZ": systMagnitudes,
        "sigmaMuonW": systMagnitudes,
        "sigmaMumuZ": systMagnitudes,
        "k_qcd_nom":2.96e-2,
        "k_qcd_unc_inp":utils.quadSum([0.61e-2, 0.463e-2])
        #"k_qcd_unc_inp":utils.quadSum([2.5*0.61e-2, 2.5*0.463e-2])
        }
class data_0b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 1656.0, 564.9, 202.7, 78.01, 28.97, 12.22, 7.012, 6.009, ) ,
		"mcTtw"              :   ( 5329.0, 2462.0, 1048.0, 723.1, 201.1, 61.25, 20.17, 7.713, 3.77, 1.589, 0.9828, ) ,
		"mcHad"              :   ( 9704.0, 4519.0, 1986.0, 1443.0, 436.1, 144.3, 50.36, 20.24, 9.147, 3.966, 3.081, ) ,
		"mcMuon"             :   ( 2.074e+04, 8052.0, 4452.0, 4182.0, 1701.0, 725.4, 337.6, 169.8, 90.46, 50.43, 73.23, ) ,
		"mcZinv"             :   ( 4375.0, 2057.0, 938.7, 719.5, 235.0, 83.09, 30.19, 12.53, 5.377, 2.377, 2.098, ) ,
		"mcMumu"             :   ( 2196.0, 888.6, 501.3, 483.4, 211.1, 92.49, 45.36, 23.35, 12.32, 6.515, 10.98, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 54.82, 28.24, 17.9, 15.26, 8.595, 5.623, 3.815, 2.715, 1.971, 1.477, 1.769, ) ,
		"mcMumuErr"          :   ( 18.14, 5.392, 3.401, 2.739, 1.411, 0.9243, 0.6372, 0.4582, 0.3513, 0.2473, 0.3149, ) ,
		"mcZinvErr"          :   ( 14.44, 8.356, 5.325, 3.374, 1.451, 0.856, 0.5128, 0.33, 0.217, 0.1447, 0.1364, ) ,
		"mcHadErr"           :   ( 28.71, 15.64, 9.671, 6.97, 3.336, 1.848, 1.063, 0.6572, 0.4549, 0.3002, 0.2417, ) ,
		"mcTtwErr"           :   ( 24.81, 13.22, 8.073, 6.098, 3.004, 1.638, 0.9314, 0.5683, 0.3998, 0.263, 0.1996, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 13.28, 7.27, 4.365, 2.69, 1.63, 1.068, 0.8025, 0.7598, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 8304.0, 3918.0, 1792.0, 1299.0, 361.0, 113.0, 42.0, 12.0, 3.0, 3.0, 1.0, ) ,
		"nMuon"              :   ( 1.693e+04, 6195.0, 3245.0, 2948.0, 1093.0, 473.0, 203.0, 112.0, 46.0, 21.0, 41.0, ) ,
		"nMumu"              :   ( 2091.0, 761.0, 439.0, 393.0, 166.0, 66.0, 32.0, 13.0, 5.0, 5.0, 4.0, ) ,
	}

        common(self)


class data_1b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 30.81, 22.6, 12.57, 6.348, 3.087, 1.375, 0.7111, 0.6888, ) ,
		"mcTtw"              :   ( 67.36, 422.5, 165.1, 127.6, 74.24, 30.03, 11.08, 4.385, 2.428, 1.11, 0.9511, ) ,
		"mcHad"              :   ( 74.13, 462.6, 181.9, 141.8, 84.43, 35.38, 14.08, 5.758, 3.025, 1.411, 1.213, ) ,
		"mcMuon"             :   ( 307.2, 1114.0, 570.8, 612.3, 441.3, 235.9, 114.4, 57.81, 30.08, 15.95, 20.53, ) ,
		"mcZinv"             :   ( 6.779, 40.03, 16.81, 14.15, 10.19, 5.351, 3.002, 1.372, 0.5967, 0.3007, 0.262, ) ,
		"mcMumu"             :   ( 6.187, 22.02, 10.06, 11.26, 10.52, 5.385, 3.38, 1.849, 0.8852, 0.6103, 0.9268, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 3.747, 6.832, 4.974, 5.064, 4.261, 3.083, 2.126, 1.483, 1.057, 0.7525, 0.8895, ) ,
		"mcMumuErr"          :   ( 0.4687, 0.9071, 0.4643, 0.4694, 0.4687, 0.2875, 0.2565, 0.1983, 0.1256, 0.09157, 0.1222, ) ,
		"mcZinvErr"          :   ( 0.2887, 0.6462, 0.389, 0.2618, 0.1604, 0.1114, 0.08471, 0.05832, 0.03713, 0.02386, 0.02224, ) ,
		"mcHadErr"           :   ( 1.714, 4.278, 2.643, 2.305, 1.729, 1.084, 0.6504, 0.3885, 0.3144, 0.1859, 0.1656, ) ,
		"mcTtwErr"           :   ( 1.69, 4.229, 2.614, 2.291, 1.722, 1.079, 0.6449, 0.3841, 0.3122, 0.1844, 0.1641, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.964, 0.7812, 0.5616, 0.3843, 0.2701, 0.1937, 0.1352, 0.1272, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 44.0, 297.0, 159.0, 114.0, 74.0, 20.0, 7.0, 7.0, 2.0, 1.0, 2.0, ) ,
		"nMuon"              :   ( 234.0, 848.0, 404.0, 412.0, 289.0, 123.0, 62.0, 30.0, 13.0, 3.0, 6.0, ) ,
		"nMumu"              :   ( 5.0, 25.0, 12.0, 7.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)


class data_1b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 166.7, 56.48, 19.27, 8.899, 3.003, 1.334, 0.7909, 0.6451, ) ,
		"mcTtw"              :   ( 1032.0, 570.8, 251.2, 174.0, 38.9, 9.921, 3.461, 1.04, 0.4734, 0.1911, 0.1359, ) ,
		"mcHad"              :   ( 1388.0, 762.7, 340.7, 243.4, 61.6, 17.61, 6.7, 2.362, 1.049, 0.4276, 0.3043, ) ,
		"mcMuon"             :   ( 4961.0, 2082.0, 1175.0, 1059.0, 372.2, 146.5, 63.01, 27.96, 15.15, 8.487, 11.1, ) ,
		"mcZinv"             :   ( 356.4, 191.9, 89.5, 69.33, 22.7, 7.684, 3.239, 1.322, 0.5757, 0.2365, 0.1684, ) ,
		"mcMumu"             :   ( 277.3, 118.8, 65.05, 61.1, 24.62, 9.884, 5.109, 2.353, 1.208, 0.8938, 1.1, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 15.63, 10.16, 7.165, 6.552, 3.737, 2.291, 1.463, 0.9328, 0.703, 0.5206, 0.5387, ) ,
		"mcMumuErr"          :   ( 3.181, 1.55, 1.174, 0.9895, 0.5525, 0.285, 0.2082, 0.1433, 0.08884, 0.1267, 0.06484, ) ,
		"mcZinvErr"          :   ( 2.226, 1.359, 0.8419, 0.5212, 0.2358, 0.1281, 0.08187, 0.0531, 0.03572, 0.02042, 0.01685, ) ,
		"mcHadErr"           :   ( 7.239, 5.011, 3.261, 2.654, 1.185, 0.5482, 0.2923, 0.1487, 0.1046, 0.04739, 0.04824, ) ,
		"mcTtwErr"           :   ( 6.888, 4.823, 3.15, 2.602, 1.161, 0.533, 0.2806, 0.1389, 0.0983, 0.04276, 0.0452, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 2.176, 1.18, 0.6608, 0.4499, 0.2626, 0.1987, 0.1287, 0.1302, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 1296.0, 745.0, 355.0, 239.0, 52.0, 16.0, 2.0, 2.0, 1.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 4175.0, 1634.0, 892.0, 768.0, 235.0, 87.0, 42.0, 15.0, 8.0, 2.0, 5.0, ) ,
		"nMumu"              :   ( 263.0, 119.0, 61.0, 60.0, 21.0, 10.0, 6.0, 3.0, 1.0, 0.0, 1.0, ) ,
	}

        common(self)


class data_2b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 4.232, 2.905, 1.691, 0.9038, 0.3958, 0.1164, 0.1284, 0.08408, ) ,
		"mcTtw"              :   ( 27.14, 186.5, 74.33, 56.39, 35.26, 13.35, 4.76, 1.501, 1.46, 0.4547, 0.4123, ) ,
		"mcHad"              :   ( 27.95, 192.1, 76.75, 58.64, 36.7, 14.05, 5.191, 1.69, 1.544, 0.4971, 0.4334, ) ,
		"mcMuon"             :   ( 181.9, 683.1, 354.9, 373.4, 263.4, 140.1, 64.37, 31.31, 16.52, 7.818, 9.571, ) ,
		"mcZinv"             :   ( 0.807, 5.556, 2.416, 2.25, 1.446, 0.7042, 0.4315, 0.1887, 0.08376, 0.04247, 0.02106, ) ,
		"mcMumu"             :   ( 2.195, 8.595, 3.744, 4.711, 4.157, 2.036, 1.029, 0.4513, 0.324, 0.2153, 0.1829, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 2.439, 4.726, 3.486, 3.564, 2.973, 2.129, 1.424, 0.9534, 0.6841, 0.4598, 0.5269, ) ,
		"mcMumuErr"          :   ( 0.2481, 0.5073, 0.3557, 0.3778, 0.3533, 0.2334, 0.1614, 0.09387, 0.1099, 0.06528, 0.05149, ) ,
		"mcZinvErr"          :   ( 0.08806, 0.2288, 0.142, 0.1099, 0.05736, 0.03754, 0.02826, 0.01854, 0.01438, 0.008621, 0.004486, ) ,
		"mcHadErr"           :   ( 0.8911, 2.345, 1.49, 1.292, 1.034, 0.5983, 0.3504, 0.1869, 0.2619, 0.1018, 0.09656, ) ,
		"mcTtwErr"           :   ( 0.8867, 2.333, 1.483, 1.287, 1.033, 0.5972, 0.3492, 0.186, 0.2615, 0.1015, 0.09646, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.343, 0.2551, 0.1846, 0.1395, 0.08466, 0.0262, 0.05032, 0.03257, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 23.0, 139.0, 59.0, 50.0, 27.0, 13.0, 6.0, 1.0, 0.0, 1.0, 0.0, ) ,
		"nMuon"              :   ( 160.0, 539.0, 281.0, 265.0, 197.0, 90.0, 41.0, 11.0, 12.0, 2.0, 5.0, ) ,
		"nMumu"              :   ( 2.0, 10.0, 4.0, 6.0, 5.0, 2.0, 1.0, 2.0, 1.0, 0.0, 0.0, ) ,
	}

        common(self)


class data_2b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 11.42, 4.357, 1.238, 0.5751, 0.1322, 0.08406, 0.1047, 0.01612, ) ,
		"mcTtw"              :   ( 151.6, 126.6, 58.67, 42.62, 8.973, 2.103, 0.8143, 0.03605, 0.05798, 0.005345, 0.003868, ) ,
		"mcHad"              :   ( 183.2, 143.7, 66.52, 48.64, 10.79, 2.691, 1.029, 0.1293, 0.09957, 0.01706, 0.01098, ) ,
		"mcMuon"             :   ( 1508.0, 704.8, 399.3, 356.8, 113.4, 41.18, 15.21, 5.766, 3.235, 1.662, 1.843, ) ,
		"mcZinv"             :   ( 31.63, 17.17, 7.844, 6.015, 1.817, 0.5883, 0.2151, 0.0933, 0.04159, 0.01171, 0.007112, ) ,
		"mcMumu"             :   ( 69.69, 28.84, 13.77, 11.44, 3.855, 1.411, 0.7117, 0.3096, 0.07789, 0.07903, 0.05841, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 7.314, 5.036, 3.833, 3.632, 2.018, 1.198, 0.7181, 0.4241, 0.3303, 0.2159, 0.2209, ) ,
		"mcMumuErr"          :   ( 1.619, 0.9288, 0.6603, 0.5737, 0.3107, 0.1788, 0.1322, 0.0825, 0.01934, 0.03473, 0.008768, ) ,
		"mcZinvErr"          :   ( 0.7097, 0.4186, 0.2614, 0.169, 0.06798, 0.03603, 0.01987, 0.01426, 0.01081, 0.003824, 0.002687, ) ,
		"mcHadErr"           :   ( 2.171, 1.945, 1.338, 1.164, 0.5434, 0.2465, 0.1457, 0.01586, 0.04038, 0.004163, 0.003107, ) ,
		"mcTtwErr"           :   ( 2.052, 1.9, 1.312, 1.151, 0.5391, 0.2439, 0.1444, 0.006959, 0.0389, 0.001646, 0.001561, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.5629, 0.3293, 0.1574, 0.1043, 0.03993, 0.04828, 0.05729, 0.00416, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 153.0, 119.0, 85.0, 41.0, 7.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 1250.0, 545.0, 303.0, 250.0, 80.0, 22.0, 7.0, 3.0, 2.0, 0.0, 1.0, ) ,
		"nMumu"              :   ( 82.0, 30.0, 12.0, 15.0, 3.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)


class data_3b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 0.2646, 0.1395, 0.1025, 0.0467, 0.02167, 0.003657, 0.01886, 0.003181, ) ,
		"mcTtw"              :   ( 2.178, 18.16, 7.636, 5.601, 3.917, 1.709, 0.5823, 0.1866, 0.1737, 0.09304, 0.06857, ) ,
		"mcHad"              :   ( 2.204, 18.42, 7.756, 5.702, 4.001, 1.745, 0.6114, 0.2003, 0.1805, 0.09613, 0.06953, ) ,
		"mcMuon"             :   ( 17.55, 68.62, 35.13, 38.03, 28.11, 15.99, 7.597, 3.726, 2.469, 0.8713, 1.035, ) ,
		"mcZinv"             :   ( 0.02523, 0.265, 0.1196, 0.1008, 0.08402, 0.03598, 0.02917, 0.01371, 0.006747, 0.003084, 0.000956, ) ,
		"mcMumu"             :   ( 0.2026, 0.5029, 0.2535, 0.3665, 0.3705, 0.1525, 0.08505, 0.02863, 0.05938, 0.01804, 0.0176, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 0.3641, 0.7198, 0.5574, 0.5836, 0.4998, 0.3764, 0.2665, 0.1822, 0.1473, 0.0817, 0.09322, ) ,
		"mcMumuErr"          :   ( 0.06002, 0.06347, 0.05221, 0.07418, 0.07268, 0.04738, 0.02639, 0.008879, 0.03439, 0.006452, 0.008236, ) ,
		"mcZinvErr"          :   ( 0.004924, 0.02886, 0.01819, 0.00821, 0.007146, 0.004045, 0.004122, 0.003298, 0.003391, 0.0009771, 0.0003753, ) ,
		"mcHadErr"           :   ( 0.1175, 0.3571, 0.2363, 0.1985, 0.1597, 0.111, 0.05501, 0.03483, 0.05648, 0.03408, 0.02218, ) ,
		"mcTtwErr"           :   ( 0.1174, 0.356, 0.2356, 0.1983, 0.1596, 0.1109, 0.05486, 0.03468, 0.05637, 0.03407, 0.02218, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.05803, 0.02776, 0.0244, 0.01112, 0.007045, 0.001112, 0.01182, 0.001624, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 2.0, 18.0, 5.0, 6.0, 5.0, 1.0, 2.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 18.0, 51.0, 26.0, 31.0, 24.0, 7.0, 6.0, 2.0, 0.0, 0.0, 0.0, ) ,
		"nMumu"              :   ( 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)


class data_3b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 0.1869, 0.07724, 0.02246, 0.007043, 0.001682, 0.0378, 0.001042, 0.0001167, ) ,
		"mcTtw"              :   ( 4.405, 5.588, 2.877, 2.276, 0.4714, 0.136, 0.08204, 0.0003971, 0.0003567, 3.244e-05, 3.137e-05, ) ,
		"mcHad"              :   ( 4.67, 5.959, 3.018, 2.38, 0.5013, 0.1533, 0.08516, 0.00187, 0.0007398, 0.000104, 7.021e-05, ) ,
		"mcMuon"             :   ( 59.93, 32.63, 17.91, 16.28, 4.951, 1.959, 0.6667, 0.2494, 0.1491, 0.04122, 0.05598, ) ,
		"mcZinv"             :   ( 0.2643, 0.371, 0.1405, 0.1044, 0.02986, 0.01734, 0.003125, 0.001473, 0.000383, 7.153e-05, 3.884e-05, ) ,
		"mcMumu"             :   ( 0.9882, 0.6373, 0.3921, 0.3704, 0.15, 0.02038, 0.01711, 0.01805, 0.001013, 0.001107, 0.002031, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 0.6466, 0.4973, 0.3835, 0.3632, 0.1959, 0.1309, 0.07185, 0.03985, 0.03439, 0.0116, 0.01327, ) ,
		"mcMumuErr"          :   ( 0.08762, 0.06052, 0.07733, 0.07351, 0.05025, 0.003118, 0.007034, 0.009544, 0.0004015, 0.0006006, 0.001479, ) ,
		"mcZinvErr"          :   ( 0.03033, 0.04065, 0.01756, 0.009694, 0.004205, 0.004489, 0.0004464, 0.00031, 0.0001469, 1.507e-05, 1.352e-05, ) ,
		"mcHadErr"           :   ( 0.1669, 0.185, 0.1377, 0.1294, 0.06071, 0.02748, 0.03683, 0.0003294, 0.000274, 1.925e-05, 1.923e-05, ) ,
		"mcTtwErr"           :   ( 0.1641, 0.1805, 0.1366, 0.129, 0.06056, 0.02711, 0.03683, 0.0001112, 0.0002312, 1.197e-05, 1.367e-05, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.02349, 0.01471, 0.005865, 0.001975, 0.0008768, 0.03751, 0.0008366, 4.344e-05, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 2.0, 4.0, 3.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 49.0, 24.0, 13.0, 14.0, 2.0, 1.0, 2.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nMumu"              :   ( 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)


class data_ge4b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 0.0, 0.003794, 0.001879, 0.002794, 0.0008556, 0.0004121, 4.156e-05, 0.002095, 4.489e-05, ) ,
		"mcTtw"              :   ( 0.03803, 0.4242, 0.2076, 0.1271, 0.1313, 0.07262, 0.03113, 0.007512, 0.02025, 0.01762, 0.004408, ) ,
		"mcHad"              :   ( 0.03822, 0.4307, 0.2095, 0.1288, 0.1345, 0.0732, 0.03187, 0.007885, 0.02038, 0.0177, 0.004427, ) ,
		"mcMuon"             :   ( 0.4051, 1.617, 0.8422, 1.034, 1.069, 0.6424, 0.3861, 0.2319, 0.1846, 0.05695, 0.0632, ) ,
		"mcZinv"             :   ( 0.0001863, 0.006493, 0.001826, 0.001792, 0.003275, 0.000582, 0.000738, 0.000373, 0.00013, 7.66e-05, 1.92e-05, ) ,
		"mcMumu"             :   ( 0.02369, 0.01436, 0.004383, 0.05439, 0.0261, 0.00521, 0.001795, 0.0006094, 0.001192, 0.0005313, 0.0004267, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 0.04289, 0.06524, 0.04903, 0.06004, 0.07008, 0.04121, 0.04033, 0.0347, 0.0295, 0.01454, 0.01568, ) ,
		"mcMumuErr"          :   ( 0.02119, 0.007034, 0.001149, 0.02768, 0.01755, 0.002473, 0.0008235, 0.0002742, 0.0007624, 0.0002929, 0.0002379, ) ,
		"mcZinvErr"          :   ( 5.53e-05, 0.003206, 0.000567, 0.0005288, 0.00139, 8.584e-05, 0.0001794, 0.0001619, 7.67e-05, 3.328e-05, 1.185e-05, ) ,
		"mcHadErr"           :   ( 0.005837, 0.02932, 0.02863, 0.009998, 0.01273, 0.00792, 0.006465, 0.001576, 0.01843, 0.01123, 0.001877, ) ,
		"mcTtwErr"           :   ( 0.005837, 0.02914, 0.02862, 0.009984, 0.01265, 0.007919, 0.006462, 0.001568, 0.01843, 0.01123, 0.001877, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.001074, 0.0005282, 0.0009798, 0.0002682, 0.0001652, 1.35e-05, 0.001356, 2.785e-05, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 0.0, 2.0, 0.0, 1.0, 2.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, ) ,
		"nMumu"              :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)

