from inputData import data, quadSum, fb

def common1(x) :

    x._lumi =   {
        "mumu"               :   19.13/fb ,
        "muon"               :   19.13/fb ,
        "mcPhot"             :   19.12/fb ,
        "mcHad"              :   18.49/fb ,
        "mcTtw"              :   18.49/fb ,
        "had"                :   18.49/fb ,
        "mcMuon"             :   19.13/fb ,
        "mcZinv"             :   18.49/fb ,
        "mcMumu"             :   19.13/fb ,
        "phot"               :   19.12/fb ,
    }

    x._triggerEfficiencies = {
        #"hadBulk":       (0.666, 0.745, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000),
        "hadBulk":       (1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000),
        "muon":          (0.891, 0.893, 0.895, 0.897, 0.898, 0.900, 0.901, 0.902, 0.904, 0.903, 0.900),
        "phot":          (1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000),
        "mumu":          (0.970, 0.972, 0.973, 0.974, 0.976, 0.977, 0.979, 0.977, 0.978, 0.980, 0.977),
        }

    x._htBinLowerEdges = ( 200.0, 275.0, 325.0, 375.0, 475.0, 575.0, 675.0, 775.0, 875.0, 975.0, 1075.0)
    x._htMaxForPlot    = 1175.0
    x._htMeans         = ( 235.2, 297.5, 347.5, 416.4, 517.3, 618.4, 716.9, 819.9, 919.0, 1019.0, 1289.0)
    

    iPhot = 3
    x._observations["nPhot"] = tuple([None]*iPhot + list(x._observations["nPhot"][iPhot:]))


def common(x) :
    common1(x)

    systBins = tuple([0]*1 + [1]*1 + [2]*1 + [3]*2 + [4]*2 + [5]*2 + [6]*2)
    name = x.__class__.__name__

    if "le3j" in name :
        systMagnitudes = (0.04, 0.06, 0.06, 0.08, 0.13, 0.18, 0.20)

        x._triggerEfficiencies["had"] = (0.818, 0.952, 0.979, 0.992, 0.998, 0.994, 1.000, 1.000, 1.000, 1.000, 1.000)
        x._triggerEfficiencies["muon"] = (0.875, 0.878, 0.879, 0.881, 0.882, 0.884, 0.885, 0.886, 0.888, 0.887, 0.884)
        x._triggerEfficiencies["mumu"] = (0.985, 0.985, 0.986, 0.986, 0.986, 0.986, 0.987, 0.986, 0.987, 0.987, 0.987)
        x._observations["nHadBulk"] = (3.4067318E09, 8.317453E08, 3.29919975E08, 2.74138825E08, 8.507427E07,   
                                       2.8887025E07, 1.09110E07, 4.6215E06, 2.07715E06, 1.031125E06, 1.20755E06)

    elif "ge4j" in name :
        systMagnitudes = (0.06, 0.06, 0.11, 0.11, 0.19, 0.19, 0.25)
        x._triggerEfficiencies["had"] = (0.789, 0.900, 0.956, 0.987, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000)
        x._triggerEfficiencies["muon"] = (0.881, 0.882, 0.884, 0.886, 0.888, 0.889, 0.890, 0.891, 0.890, 0.890, 0.896)
        x._triggerEfficiencies["mumu"] = (0.984, 0.984, 0.986, 0.985, 0.986, 0.986, 0.986, 0.986, 0.986, 0.988, 0.987)
        x._observations["nHadBulk"] = (6.60088E07, 1.400533E08, 5.2689525E07, 4.8204025E07, 3.35079E07,
                                       1.582655E07, 7.279475E06, 3.46345E06, 1.732725E06, 8.9562E05, 1.142775E06)

    if "ge4b" in name :
        x._mergeBins = (0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3)
        systMagnitudes = (0.15,)
        systBins = (0, 0, 0, 0)

    elif "2b" in name or "3b" in name:
        x._mergeBins = (0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 8)
        systBins = tuple([0]*1 + [1]*1 + [2]*1 + [3]*2 + [4]*2 + [5]*2)# + [6]*2)
        systMagnitudes = systMagnitudes[:-1]

    else :
        x._mergeBins = None

    x._systBins = {
        "sigmaPhotZ": systBins,
        "sigmaMuonW": systBins,
        "sigmaMumuZ": systBins,
        }

    x._fixedParameters = {
        "sigmaPhotZ": systMagnitudes,
        "sigmaMuonW": systMagnitudes,
        "sigmaMumuZ": systMagnitudes,
        "k_qcd_nom":2.96e-2,
        "k_qcd_unc_inp":quadSum([0.61e-2, 0.463e-2])
        #"k_qcd_unc_inp":quadSum([2.5*0.61e-2, 2.5*0.463e-2])
        }

class data_0b_ge4j(data) :
    def _fill(self) :

        self._mcExpectationsBeforeTrigger =     {
        "mcPhot"             :   ( 0.0, 0.0, 0.0, 403.8, 297.4, 160.5, 79.85, 37.99, 17.22, 7.391, 9.28, ) ,
        "mcTtw"              :   ( 77.1, 340.4, 285.5, 200.8, 110.7, 45.68, 17.49, 7.69, 2.903, 1.285, 1.616, ) ,
        "mcHad"              :   ( 143.8, 630.0, 512.7, 383.3, 241.5, 114.0, 48.95, 21.42, 9.68, 4.491, 5.018, ) ,
        "mcMuon"             :   ( 811.4, 2.749e+03, 1.334e+03, 1.42e+03, 1.096e+03, 626.0, 361.8, 186.7, 103.8, 58.79, 84.85, ) ,
        "mcZinv"             :   ( 66.69, 289.6, 227.2, 182.5, 130.8, 68.29, 31.46, 13.73, 6.777, 3.206, 3.402, ) ,
        "mcMumu"             :   ( 33.79, 124.2, 59.66, 66.17, 61.66, 36.7, 20.87, 11.86, 6.585, 4.066, 6.618, ) ,
    }

        self._mcStatError =     {
        "mcMuonErr"          :   ( 23.2, 27.79, 16.94, 12.37, 10.29, 7.735, 14.28, 4.275, 3.136, 2.349, 2.836, ) ,
        "mcMumuErr"          :   ( 2.017, 2.9, 1.86, 1.526, 1.244, 0.9504, 0.6925, 0.5314, 0.388, 0.3064, 0.405, ) ,
        "mcZinvErr"          :   ( 2.629, 5.026, 4.256, 2.828, 1.723, 1.216, 0.8173, 0.5344, 0.379, 0.259, 0.2663, ) ,
        "mcHadErr"           :   ( 4.497, 9.184, 7.564, 5.592, 3.819, 2.431, 1.522, 1.022, 0.6349, 0.4382, 0.4925, ) ,
        "mcTtwErr"           :   ( 3.648, 7.687, 6.253, 4.825, 3.408, 2.104, 1.284, 0.8708, 0.5094, 0.3535, 0.4143, ) ,
        "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 10.56, 8.396, 6.097, 4.306, 2.952, 2.016, 1.313, 1.507, ) ,
    }

        self._observations =    {
        "nPhot"              :   ( 0.0, 0.0, 0.0, 372.0, 251.0, 137.0, 71.0, 26.0, 13.0, 6.0, 6.0, ) ,
        # "nHad"               :   ( 99.0, 568.0, 408.0, 336.0, 211.0, 117.0, 38.0, 13.0, 9.0, 4.0, 6.0, ) ,
        "nHad"               :   ( 108.5, 497.1, 402.9, 327.0, 193.4, 94.58, 40.32, 14.52, 7.122, 3.224, 2.868, ),
        "nMuon"              :   ( 641.0, 2.128e+03, 1.007e+03, 1.013e+03, 715.0, 471.0, 252.0, 133.0, 66.0, 42.0, 55.0, ) ,
        "nMumu"              :   ( 34.0, 107.0, 46.0, 61.0, 54.0, 28.0, 16.0, 5.0, 5.0, 2.0, 2.0, ) ,
    }

        common(self)


class data_0b_le3j(data) :
    def _fill(self) :

        self._mcExpectationsBeforeTrigger =     {
        "mcPhot"             :   ( 0.0, 0.0, 0.0, 3.932e+03, 1.347e+03, 481.9, 195.0, 72.24, 30.23, 17.57, 14.33, ) ,
        "mcTtw"              :   ( 7.287e+03, 2.539e+03, 1.588e+03, 1.032e+03, 275.2, 79.41, 27.5, 9.336, 4.083, 2.217, 1.428, ) ,
        "mcHad"              :   ( 1.58e+04, 5.983e+03, 3.781e+03, 2.704e+03, 822.0, 273.8, 99.13, 38.73, 16.93, 8.017, 6.688, ) ,
        "mcMuon"             :   ( 5.187e+04, 2.025e+04, 1.119e+04, 1.053e+04, 4.35e+03, 1.876e+03, 891.0, 447.1, 248.1, 135.0, 205.5, ) ,
        "mcZinv"             :   ( 8.515e+03, 3.444e+03, 2.193e+03, 1.672e+03, 546.8, 194.4, 71.64, 29.39, 12.85, 5.8, 5.26, ) ,
        "mcMumu"             :   ( 3.27e+03, 1.4e+03, 810.0, 808.3, 368.2, 164.2, 82.04, 41.52, 21.96, 12.29, 19.08, ) ,
    }

        self._mcStatError =     {
        "mcMuonErr"          :   ( 130.3, 69.53, 41.8, 38.88, 21.79, 14.31, 9.819, 6.967, 5.161, 3.827, 4.697, ) ,
        "mcMumuErr"          :   ( 34.49, 10.38, 6.939, 5.88, 3.027, 1.97, 1.39, 0.9829, 0.716, 0.5424, 0.671, ) ,
        "mcZinvErr"          :   ( 32.06, 17.29, 13.04, 8.316, 3.528, 2.083, 1.266, 0.8087, 0.5351, 0.3612, 0.345, ) ,
        "mcHadErr"           :   ( 51.4, 27.43, 20.37, 14.09, 6.471, 3.552, 2.115, 1.273, 0.8566, 0.6074, 0.5171, ) ,
        "mcTtwErr"           :   ( 40.17, 21.3, 15.65, 11.37, 5.424, 2.878, 1.694, 0.9833, 0.6689, 0.4883, 0.3852, ) ,
        "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 33.19, 18.23, 10.9, 6.949, 4.193, 2.712, 2.079, 1.906, ) ,
    }

        self._observations =    {
        "nPhot"              :   ( 0.0, 0.0, 0.0, 3.522e+03, 1.068e+03, 395.0, 129.0, 45.0, 19.0, 9.0, 14.0, ) ,
        # "nHad"               :   ( 1.309e+04, 5.331e+03, 3.354e+03, 2.326e+03, 671.0, 206.0, 76.0, 29.0, 10.0, 9.0, 2.0, ) ,
        "nHad"               :   ( 1.2412e+04, 5535, 3331, 2399, 663.2, 225.1, 68.53, 26.52, 10.32, 5.058, 4.5, ) ,
        "nMuon"              :   ( 4.353e+04, 1.647e+04, 8.791e+03, 8.195e+03, 3.226e+03, 1.429e+03, 582.0, 317.0, 128.0, 75.0, 128.0, ) ,
        "nMumu"              :   ( 3.096e+03, 1.385e+03, 722.0, 729.0, 283.0, 129.0, 57.0, 28.0, 13.0, 10.0, 8.0, ) ,
    }

        common(self)


class data_1b_ge4j(data) :
    def _fill(self) :

        self._mcExpectationsBeforeTrigger =     {
        "mcPhot"             :   ( 0.0, 0.0, 0.0, 67.47, 51.72, 29.82, 14.05, 6.637, 3.584, 1.689, 1.275, ) ,
        "mcTtw"              :   ( 44.04, 220.4, 225.0, 146.7, 76.57, 26.89, 9.61, 3.354, 1.551, 0.4053, 0.3091, ) ,
        "mcHad"              :   ( 53.33, 263.2, 260.8, 175.9, 96.83, 37.84, 15.2, 6.057, 2.693, 0.9845, 0.8656, ) ,
        "mcMuon"             :   ( 712.1, 2.594e+03, 1.36e+03, 1.477e+03, 1.09e+03, 590.0, 299.9, 146.0, 81.92, 42.0, 58.3, ) ,
        "mcZinv"             :   ( 9.286, 42.78, 35.81, 29.25, 20.27, 10.95, 5.586, 2.703, 1.141, 0.5792, 0.5565, ) ,
        "mcMumu"             :   ( 8.781, 33.99, 14.76, 16.66, 16.24, 8.422, 5.142, 2.981, 1.422, 1.27, 1.803, ) ,
    }

        self._mcStatError =     {
        "mcMuonErr"          :   ( 8.84, 16.72, 12.34, 12.65, 10.75, 7.865, 5.681, 3.804, 2.881, 1.961, 2.355, ) ,
        "mcMumuErr"          :   ( 0.7078, 2.068, 0.8761, 0.8725, 0.8852, 0.5188, 0.461, 0.388, 0.2221, 0.3215, 0.2939, ) ,
        "mcZinvErr"          :   ( 0.5244, 1.061, 0.906, 0.6222, 0.3578, 0.2497, 0.1903, 0.1345, 0.08149, 0.05416, 0.0601, ) ,
        "mcHadErr"           :   ( 2.207, 4.915, 4.915, 3.884, 2.834, 1.665, 0.9138, 0.5296, 0.3658, 0.1706, 0.1448, ) ,
        "mcTtwErr"           :   ( 2.144, 4.799, 4.831, 3.834, 2.812, 1.647, 0.8937, 0.5122, 0.3566, 0.1618, 0.1318, ) ,
        "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 2.327, 1.95, 1.446, 0.9492, 0.6257, 0.5552, 0.3642, 0.2626, ) ,
    }

        self._observations =    {
        "nPhot"              :   ( 0.0, 0.0, 0.0, 83.0, 53.0, 30.0, 13.0, 8.0, 3.0, 3.0, 3.0, ) ,
        # "nHad"               :   ( 38.0, 195.0, 210.0, 159.0, 83.0, 33.0, 7.0, 10.0, 4.0, 1.0, 1.0, ) ,
        "nHad"               :   ( 39.21, 215.5, 208.2, 150.2, 75.77, 28.64, 10.29, 5.096, 1.955, 0.837, 0.875, ) ,
        "nMuon"              :   ( 570.0, 2.034e+03, 913.0, 1.016e+03, 720.0, 321.0, 163.0, 77.0, 38.0, 24.0, 23.0, ) ,
        "nMumu"              :   ( 9.0, 34.0, 19.0, 27.0, 10.0, 12.0, 2.0, 3.0, 2.0, 0.0, 1.0, ) ,
    }

        common(self)


class data_1b_le3j(data) :
    def _fill(self) :

        self._mcExpectationsBeforeTrigger =     {
        "mcPhot"             :   ( 0.0, 0.0, 0.0, 391.8, 132.8, 48.29, 19.13, 6.806, 3.571, 1.832, 1.653, ) ,
        "mcTtw"              :   ( 1.264e+03, 545.3, 363.1, 235.6, 48.19, 12.47, 3.626, 1.337, 0.2393, 0.2565, 0.114, ) ,
        "mcHad"              :   ( 1.948e+03, 847.6, 573.2, 392.5, 100.1, 30.47, 10.17, 4.114, 1.605, 0.7528, 0.5102, ) ,
        "mcMuon"             :   ( 1.186e+04, 5.089e+03, 2.89e+03, 2.629e+03, 950.4, 382.1, 167.6, 74.81, 42.87, 22.62, 33.28, ) ,
        "mcZinv"             :   ( 683.4, 302.3, 210.1, 156.9, 51.94, 18.0, 6.547, 2.777, 1.366, 0.4963, 0.3962, ) ,
        "mcMumu"             :   ( 414.3, 181.3, 104.6, 100.8, 43.17, 17.2, 9.289, 4.332, 2.188, 1.487, 1.934, ) ,
    }

        self._mcStatError =     {
        "mcMuonErr"          :   ( 37.76, 23.77, 17.78, 16.5, 9.556, 5.991, 3.882, 2.439, 1.874, 1.341, 1.524, ) ,
        "mcMumuErr"          :   ( 6.461, 2.881, 2.503, 1.934, 1.229, 0.4993, 0.461, 0.2923, 0.1813, 0.2112, 0.1003, ) ,
        "mcZinvErr"          :   ( 4.978, 2.762, 2.097, 1.292, 0.5753, 0.3105, 0.1898, 0.1223, 0.0903, 0.04453, 0.04457, ) ,
        "mcHadErr"           :   ( 12.46, 7.94, 6.357, 4.955, 2.041, 0.9571, 0.454, 0.2785, 0.09913, 0.09184, 0.07462, ) ,
        "mcTtwErr"           :   ( 11.43, 7.444, 6.001, 4.784, 1.958, 0.9053, 0.4124, 0.2503, 0.04091, 0.08033, 0.05985, ) ,
        "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 5.545, 2.968, 1.734, 1.081, 0.609, 0.55, 0.3256, 0.3777, ) ,
    }

        self._observations =    {
        "nPhot"              :   ( 0.0, 0.0, 0.0, 452.0, 143.0, 37.0, 19.0, 4.0, 5.0, 0.0, 0.0, ) ,
        # "nHad"               :   ( 1.733e+03, 833.0, 527.0, 356.0, 90.0, 31.0, 6.0, 4.0, 1.0, 0.0, 1.0, ) ,
        "nHad"               :   ( 1668, 853.1, 525.3, 391.4, 94.25, 24.51, 9.039, 2.789, 2.527, 0.305, 0.188, ) ,
        "nMuon"              :   ( 1.059e+04, 4.334e+03, 2.3e+03, 2.129e+03, 720.0, 269.0, 113.0, 51.0, 21.0, 12.0, 20.0, ) ,
        "nMumu"              :   ( 448.0, 217.0, 102.0, 112.0, 38.0, 16.0, 8.0, 3.0, 5.0, 1.0, 1.0, ) ,
    }

        common(self)


class data_2b_ge4j(data) :
    def _fill(self) :

        self._mcExpectationsBeforeTrigger =     {
        "mcPhot"             :   ( 0.0, 0.0, 0.0, 9.069, 7.118, 4.711, 2.124, 0.6911, 0.3153, 0.2877, 0.195, ) ,
        "mcTtw"              :   ( 16.1, 89.79, 108.0, 71.18, 40.57, 12.16, 3.683, 1.192, 0.9279, 0.06691, 0.03476, ) ,
        "mcHad"              :   ( 17.25, 95.95, 113.2, 76.05, 43.46, 13.66, 4.47, 1.589, 1.079, 0.1361, 0.09125, ) ,
        "mcMuon"             :   ( 427.2, 1.614e+03, 848.7, 912.1, 678.3, 352.5, 170.0, 78.38, 43.27, 20.31, 27.65, ) ,
        "mcZinv"             :   ( 1.151, 6.154, 5.168, 4.872, 2.89, 1.508, 0.7862, 0.3972, 0.1514, 0.06919, 0.05649, ) ,
        "mcMumu"             :   ( 3.854, 12.64, 5.92, 6.295, 6.239, 2.807, 1.412, 0.5989, 0.2618, 0.6222, 0.3149, ) ,
    }

        self._mcStatError =     {
        "mcMuonErr"          :   ( 6.009, 11.73, 8.661, 8.962, 7.734, 5.454, 3.756, 2.453, 1.837, 1.175, 1.382, ) ,
        "mcMumuErr"          :   ( 0.5378, 0.9602, 0.748, 0.6903, 0.6963, 0.4228, 0.2855, 0.1703, 0.1115, 0.2567, 0.09992, ) ,
        "mcZinvErr"          :   ( 0.1728, 0.3912, 0.3359, 0.2667, 0.132, 0.08761, 0.0628, 0.0461, 0.03055, 0.01556, 0.01601, ) ,
        "mcHadErr"           :   ( 1.07, 2.539, 2.849, 2.314, 1.825, 0.9638, 0.4487, 0.2434, 0.299, 0.05818, 0.03343, ) ,
        "mcTtwErr"           :   ( 1.056, 2.509, 2.829, 2.299, 1.821, 0.9598, 0.4443, 0.239, 0.2974, 0.05606, 0.02934, ) ,
        "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.823, 0.6751, 0.5312, 0.3645, 0.1636, 0.06936, 0.1158, 0.1038, ) ,
    }

        self._observations =    {
        "nPhot"              :   ( 0.0, 0.0, 0.0, 15.0, 10.0, 8.0, 2.0, 1.0, 3.0, 0.0, 1.0, ) ,
        # "nHad"               :   ( 16.0, 81.0, 88.0, 64.0, 43.0, 14.0, 5.0, 1.0, 1.0, 0.0, 0.0, ) ,
        "nHad"               :   ( 12.26, 76.73, 92.58, 62.98, 33.98, 10.12, 3.426, 0.956, 0.691, 0.0, 0.0) ,
        "nMuon"              :   ( 339.0, 1.265e+03, 642.0, 678.0, 471.0, 232.0, 116.0, 42.0, 21.0, 7.0, 15.0, ) ,
        "nMumu"              :   ( 4.0, 10.0, 5.0, 3.0, 5.0, 1.0, 1.0, 3.0, 0.0, 0.0, 2.0, ) ,
    }

        common(self)


class data_2b_le3j(data) :
    def _fill(self) :

        self._mcExpectationsBeforeTrigger =     {
        "mcPhot"             :   ( 0.0, 0.0, 0.0, 28.8, 10.04, 3.313, 1.032, 0.3743, 0.2221, 0.2307, 0.03744, ) ,
        "mcTtw"              :   ( 161.9, 99.72, 88.55, 59.53, 11.27, 2.914, 0.6605, 0.05519, 0.004754, 0.007456, 0.002451, ) ,
        "mcHad"              :   ( 225.9, 128.0, 108.3, 73.64, 15.62, 4.232, 1.104, 0.2537, 0.1185, 0.02987, 0.02085, ) ,
        "mcMuon"             :   ( 3.453e+03, 1.662e+03, 945.1, 868.4, 290.4, 105.5, 38.52, 15.33, 8.863, 4.572, 6.248, ) ,
        "mcZinv"             :   ( 64.0, 28.24, 19.75, 14.11, 4.359, 1.318, 0.4438, 0.1985, 0.1137, 0.02241, 0.0184, ) ,
        "mcMumu"             :   ( 104.1, 42.32, 20.75, 16.95, 6.314, 1.721, 1.297, 0.6456, 0.109, 0.1707, 0.1194, ) ,
    }

        self._mcStatError =     {
        "mcMuonErr"          :   ( 17.82, 12.4, 9.405, 9.126, 5.235, 3.17, 1.833, 1.101, 0.8733, 0.5977, 0.6885, ) ,
        "mcMumuErr"          :   ( 3.144, 1.771, 1.294, 1.052, 0.6434, 0.2325, 0.3004, 0.1996, 0.0216, 0.08564, 0.0237, ) ,
        "mcZinvErr"          :   ( 1.689, 0.8884, 0.6886, 0.4309, 0.171, 0.08483, 0.04861, 0.03382, 0.02987, 0.008169, 0.008501, ) ,
        "mcHadErr"           :   ( 3.711, 2.644, 2.659, 2.181, 0.9852, 0.4867, 0.1839, 0.03817, 0.02988, 0.008796, 0.008673, ) ,
        "mcTtwErr"           :   ( 3.305, 2.49, 2.568, 2.138, 0.9702, 0.4792, 0.1774, 0.0177, 0.0009616, 0.00326, 0.001718, ) ,
        "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 1.517, 0.816, 0.4272, 0.2065, 0.1244, 0.1275, 0.128, 0.01041, ) ,
    }

        self._observations =    {
        "nPhot"              :   ( 0.0, 0.0, 0.0, 32.0, 9.0, 4.0, 0.0, 0.0, 1.0, 0.0, 0.0, ) ,
        # "nHad"               :   ( 172.0, 116.0, 101.0, 55.0, 16.0, 9.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
        "nHad"               :   ( 187.5, 117.7, 98.66, 61.3, 12.3, 2.797, 0.68, 0.205, 0.0679, 0.0, 0.0) ,
        "nMuon"              :   ( 3.065e+03, 1.41e+03, 773.0, 642.0, 202.0, 62.0, 21.0, 11.0, 6.0, 0.0, 1.0, ) ,
        "nMumu"              :   ( 117.0, 49.0, 23.0, 22.0, 4.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
    }

        common(self)


class data_3b_ge4j(data) :
    def _fill(self) :

        self._mcExpectationsBeforeTrigger =     {
        "mcPhot"             :   ( 0.0, 0.0, 0.0, 0.3968, 0.4148, 0.3018, 0.09456, 0.03745, 0.01034, 0.04007, 0.007026, ) ,
        "mcTtw"              :   ( 1.254, 8.532, 11.64, 7.174, 4.544, 1.367, 0.4335, 0.1454, 0.08043, 0.0003997, 8.741e-05, ) ,
        "mcHad"              :   ( 1.284, 8.806, 11.92, 7.387, 4.702, 1.456, 0.4799, 0.1746, 0.09416, 0.005369, 0.002674, ) ,
        "mcMuon"             :   ( 43.15, 167.8, 86.98, 95.06, 78.27, 41.66, 20.59, 9.835, 5.854, 2.197, 3.449, ) ,
        "mcZinv"             :   ( 0.03011, 0.2732, 0.2777, 0.2135, 0.1585, 0.08961, 0.04642, 0.02913, 0.01373, 0.00497, 0.002587, ) ,
        "mcMumu"             :   ( 0.3738, 0.6879, 0.3896, 0.5693, 0.478, 0.1115, 0.1612, 0.03379, 0.01158, 0.0626, 0.02301, ) ,
    }

        self._mcStatError =     {
        "mcMuonErr"          :   ( 0.9395, 1.829, 1.442, 1.478, 1.397, 0.9784, 0.7161, 0.4981, 0.3777, 0.2137, 0.2471, ) ,
        "mcMumuErr"          :   ( 0.1319, 0.09747, 0.1098, 0.1587, 0.1052, 0.01724, 0.06751, 0.01462, 0.004992, 0.04305, 0.01007, ) ,
        "mcZinvErr"          :   ( 0.005492, 0.04585, 0.05096, 0.01864, 0.01604, 0.01248, 0.00783, 0.008252, 0.008187, 0.001901, 0.00119, ) ,
        "mcHadErr"           :   ( 0.1336, 0.3777, 0.4461, 0.3428, 0.2882, 0.1535, 0.07259, 0.03678, 0.07962, 0.001913, 0.001191, ) ,
        "mcTtwErr"           :   ( 0.1335, 0.3749, 0.4432, 0.3423, 0.2878, 0.153, 0.07217, 0.03584, 0.0792, 0.0002083, 4.798e-05, ) ,
        "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.08074, 0.1043, 0.06772, 0.02491, 0.01606, 0.003051, 0.02585, 0.004485, ) ,
    }

        self._observations =    {
        "nPhot"              :   ( 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
        # "nHad"               :   ( 0.0, 7.0, 5.0, 5.0, 6.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, ) ,
        "nHad"               :   ( 1.093, 8.192, 11.11, 7.445, 3.992, 1.101, 0.419, 0.0996, 0.0598, 0.0, 0.0) ,
        "nMuon"              :   ( 41.0, 153.0, 75.0, 86.0, 59.0, 28.0, 16.0, 5.0, 5.0, 1.0, 0.0, ) ,
        "nMumu"              :   ( 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
    }

        common(self)


class data_3b_le3j(data) :
    def _fill(self) :

        self._mcExpectationsBeforeTrigger =     {
        "mcPhot"             :   ( 0.0, 0.0, 0.0, 0.4503, 0.1872, 0.05465, 0.01093, 0.003744, 0.09569, 0.001932, 0.0002386, ) ,
        "mcTtw"              :   ( 3.948, 4.114, 4.683, 3.253, 0.6344, 0.1554, 0.03244, 0.000879, 3.112e-05, 2.844e-05, 1.584e-05, ) ,
        "mcHad"              :   ( 4.505, 4.679, 5.059, 3.512, 0.7053, 0.1876, 0.04327, 0.003804, 0.0009324, 0.000131, 9.475e-05, ) ,
        "mcMuon"             :   ( 147.4, 81.9, 44.77, 41.13, 14.14, 5.16, 1.587, 0.5887, 0.4376, 0.1247, 0.1918, ) ,
        "mcZinv"             :   ( 0.5568, 0.5644, 0.3769, 0.2595, 0.0709, 0.03219, 0.01083, 0.002925, 0.0009013, 0.0001026, 7.891e-05, ) ,
        "mcMumu"             :   ( 1.657, 0.9467, 0.5779, 0.413, 0.2549, 0.02975, 0.02148, 0.03836, 0.001215, 0.00195, 0.001285, ) ,
    }

        self._mcStatError =     {
        "mcMuonErr"          :   ( 1.657, 1.289, 0.9676, 0.9195, 0.5469, 0.3486, 0.1662, 0.08719, 0.1072, 0.03388, 0.04016, ) ,
        "mcMumuErr"          :   ( 0.2173, 0.115, 0.1441, 0.1127, 0.122, 0.005564, 0.00558, 0.02279, 0.0003956, 0.001104, 0.0004231, ) ,
        "mcZinvErr"          :   ( 0.07946, 0.08263, 0.05213, 0.03757, 0.01061, 0.008895, 0.005318, 0.0006467, 0.0003508, 2.576e-05, 3.171e-05, ) ,
        "mcHadErr"           :   ( 0.2526, 0.2552, 0.2647, 0.2402, 0.1058, 0.04793, 0.01535, 0.0007728, 0.0003509, 3.04e-05, 3.412e-05, ) ,
        "mcTtwErr"           :   ( 0.2398, 0.2414, 0.2596, 0.2373, 0.1053, 0.0471, 0.0144, 0.000423, 8.307e-06, 1.614e-05, 1.261e-05, ) ,
        "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.06312, 0.03709, 0.01504, 0.00338, 0.002035, 0.09492, 0.001554, 9.347e-05, ) ,
    }

        self._observations =    {
        "nPhot"              :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
        # "nHad"               :   ( 4.0, 3.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
        "nHad"               :   ( 3.771, 4.336, 6.42, 2.404, 0.395, 0.164, 0.0616, 0.0, 0.0, 0.0, 0.0) ,
        "nMuon"              :   ( 132.0, 70.0, 51.0, 25.0, 7.0, 4.0, 2.0, 0.0, 0.0, 0.0, 0.0, ) ,
        "nMumu"              :   ( 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
    }

        common(self)


class data_ge4b_ge4j(data) :
    def _fill(self) :

        self._mcExpectationsBeforeTrigger =     {
        "mcPhot"             :   ( 0.0, 0.0, 0.0, 0.004635, 0.005824, 0.007358, 0.001364, 0.0006052, 0.0001296, 0.004135, 8.757e-05, ) ,
        "mcTtw"              :   ( 0.01796, 0.1773, 0.3278, 0.1691, 0.1427, 0.04952, 0.02129, 0.008172, 2.206e-05, 7.419e-06, 6.495e-07, ) ,
        "mcHad"              :   ( 0.01819, 0.1883, 0.3323, 0.1732, 0.1453, 0.05378, 0.02225, 0.008923, 0.0002789, 0.0001149, 4.66e-05, ) ,
        "mcMuon"             :   ( 0.9657, 3.822, 2.108, 2.72, 3.3, 1.744, 1.186, 0.7128, 0.3949, 0.09685, 0.2779, ) ,
        "mcZinv"             :   ( 0.0002271, 0.01094, 0.004488, 0.004114, 0.00252, 0.004269, 0.0009644, 0.0007506, 0.0002568, 0.0001074, 4.595e-05, ) ,
        "mcMumu"             :   ( 0.05871, 0.0217, 0.006387, 0.1395, 0.05995, 0.001298, 0.003842, 0.0007033, 0.0001447, 0.0007635, 0.000525, ) ,
    }

        self._mcStatError =     {
        "mcMuonErr"          :   ( 0.09696, 0.1462, 0.1379, 0.1716, 0.2232, 0.1184, 0.1171, 0.1127, 0.06862, 0.01959, 0.05299, ) ,
        "mcMumuErr"          :   ( 0.05508, 0.01265, 0.002178, 0.0725, 0.047, 0.0002379, 0.002181, 0.0004822, 6.679e-05, 0.0005497, 0.0002726, ) ,
        "mcZinvErr"          :   ( 5.24e-05, 0.008263, 0.001545, 0.001409, 0.0003717, 0.00276, 0.0003041, 0.0003623, 0.0001788, 5.538e-05, 3.199e-05, ) ,
        "mcHadErr"           :   ( 0.00244, 0.02302, 0.04815, 0.01952, 0.02191, 0.009262, 0.007222, 0.002887, 0.0001796, 5.555e-05, 3.199e-05, ) ,
        "mcTtwErr"           :   ( 0.002439, 0.02149, 0.04812, 0.01946, 0.02191, 0.008841, 0.007215, 0.002864, 1.749e-05, 4.39e-06, 3.043e-07, ) ,
        "mcPhotErr"          :   ( 0.0, 0.0, 0.0, 0.001351, 0.001885, 0.00252, 0.0004606, 0.0003108, 4.67e-05, 0.002729, 6.518e-05, ) ,
    }

        self._observations =    {
        "nPhot"              :   ( 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
        # "nHad"               :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
        "nHad"               :   ( 0.0, 0.151, 0.511, 0.347, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) ,
        "nMuon"              :   ( 0.0, 3.0, 3.0, 1.0, 3.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, ) ,
        "nMumu"              :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
    }

        common(self)
