from inputData import data, quadSum, fb


def common1(x) :

    x._lumi =  	{
        "muon"               :   19.72/fb ,
        "mcPhot"             :   19.71/fb ,
        "mcTtw"              :   19.47/fb ,
        "mcHad"              :   19.47/fb ,
        "had"                :   19.47/fb ,
        "mcMuon"             :   19.72/fb ,
        "mcZinv"             :   19.47/fb ,
        "phot"               :   19.71/fb ,
	}
    
    x._triggerEfficiencies = {
        "hadBulk":       (1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000),
        "muon":          (0.893, 0.895, 0.897, 0.898, 0.900, 0.901, 0.902, 0.904, 0.903, 0.900),
        "phot":          (1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000),
        }

    x._htBinLowerEdges = (275.0, 325.0, 375.0, 475.0, 575.0, 675.0, 775.0, 875.0, 975.0, 1075.0)
    x._htMaxForPlot    = 1175.0
    x._htMeans         = (297.5, 347.5, 416.4, 517.3, 618.4, 716.9, 819.9, 919.0, 1019.0, 1289.0)
    

def common(x) :
    common1(x)

    systBins = tuple([0]*1 + [1]*1 + [2]*1 + [3]*2 + [4]*2 + [5]*2 + [6])
    name = x.__class__.__name__

    if "le3j" in name :
        systMagnitudes = (0.06, 0.06, 0.08, 0.13, 0.18, 0.20, 0.20)

        x._triggerEfficiencies["had"] = (0.952, 0.979, 0.992, 0.998, 0.994, 1.000, 1.000, 1.000, 1.000, 1.000)
        x._observations["nHadBulk"] = (8.317453E08, 3.29919975E08, 2.74138825E08, 8.507427E07,   
                                       2.8887025E07, 1.09110E07, 4.6215E06, 2.07715E06, 1.031125E06, 1.20755E06)

    elif "ge4j" in name :
        systMagnitudes = (0.06, 0.11, 0.11, 0.19, 0.19, 0.25, 0.25)
        x._triggerEfficiencies["had"] = (0.900, 0.956, 0.987, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000)
        x._observations["nHadBulk"] = (1.400533E08, 5.2689525E07, 4.8204025E07, 3.35079E07,
                                       1.582655E07, 7.279475E06, 3.46345E06, 1.732725E06, 8.9562E05, 1.142775E06)

#    if "ge4b" in name :
#        x._mergeBins = (0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3)
#        systMagnitudes = (0.15,)
#        systBins = (0, 0, 0, 0)
#    else :
    x._mergeBins = None

    x._systBins = {
        "sigmaPhotZ": systBins,
        "sigmaMuonW": systBins,
        "sigmaMumuZ": systBins,
        }

    x._fixedParameters = {
        "sigmaPhotZ": systMagnitudes,
        "sigmaMuonW": systMagnitudes,
        "sigmaMumuZ": systMagnitudes,
        "k_qcd_nom":2.96e-2,
        "k_qcd_unc_inp":quadSum([0.61e-2, 0.463e-2])
        #"k_qcd_unc_inp":quadSum([2.5*0.61e-2, 2.5*0.463e-2])
        }

class data_0b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcZinv"             :   ( 0.0, 0.0, 1982.0, 644.6, 229.9, 84.66, 36.07, 14.48, 6.727, 3.001, ) ,
		"mcPhot"             :   ( 0.0, 0.0, 3767.0, 1320.0, 465.4, 187.7, 69.23, 28.22, 16.28, 8.337, ) ,
		"mcHad"              :   ( 0.0, 0.0, 3176.0, 961.8, 322.4, 113.1, 49.29, 18.4, 8.945, 3.79, ) ,
		"mcTtw"              :   ( 0.0, 0.0, 1194.0, 317.1, 92.46, 28.48, 13.21, 3.927, 2.218, 0.7892, ) ,
		"mcMuon"             :   ( 0.0, 0.0, 1.905e+04, 6599.0, 2649.0, 1193.0, 582.5, 298.9, 162.0, 94.52, ) ,
	}

        self._mcStatError =  	{
		"mcTtwErr"           :   ( 0.0, 0.0, 13.15, 6.267, 3.359, 1.883, 1.231, 0.6496, 0.4914, 0.2782, ) ,
		"mcHadErr"           :   ( 0.0, 0.0, 16.27, 7.581, 4.21, 2.43, 1.59, 0.9058, 0.6546, 0.4007, ) ,
		"mcMuonErr"          :   ( 0.0, 0.0, 63.25, 31.32, 18.41, 11.77, 7.941, 5.675, 4.038, 3.022, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 32.76, 18.46, 10.99, 6.986, 4.221, 2.705, 2.046, 1.522, ) ,
		"mcZinvErr"          :   ( 0.0, 0.0, 9.577, 4.265, 2.538, 1.535, 1.007, 0.6312, 0.4324, 0.2884, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 4000.0, 1206.0, 408.0, 127.0, 50.0, 22.0, 10.0, 7.0, ) ,
		"nHad"               :   ( 0.0, 0.0, 2383.0, 647.0, 214.0, 63.0, 26.0, 8.0, 9.0, 0.0, ) ,
		"nMuon"              :   ( 0.0, 0.0, 1.753e+04, 6234.0, 2453.0, 1005.0, 526.0, 256.0, 111.0, 66.0, ) ,
	}

        common(self)

class data_0b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  {
                "mcZinv"             :   ( 0.0, 0.0, 252.2, 182.0, 94.23, 43.83, 20.05, 8.913, 5.07, 2.571, ) ,
                "mcPhot"             :   ( 0.0, 0.0, 407.1, 318.2, 159.7, 80.31, 31.8, 17.92, 7.443, 4.52, ) ,
                "mcHad"              :   ( 0.0, 0.0, 507.8, 329.9, 155.4, 69.86, 29.13, 13.38, 7.082, 3.774, ) ,
                "mcTtw"              :   ( 0.0, 0.0, 255.5, 147.9, 61.17, 26.03, 9.077, 4.464, 2.012, 1.203, ) ,
                "mcMuon"             :   ( 0.0, 0.0, 4336.0, 3052.0, 1585.0, 841.2, 440.5, 246.0, 138.1, 82.59, ) ,
            }
        
        self._mcStatError =  	{
		"mcTtwErr"           :   ( 0.0, 0.0, 6.576, 4.636, 2.917, 1.858, 1.063, 0.7789, 0.524, 0.4164, ) ,
		"mcHadErr"           :   ( 0.0, 0.0, 7.536, 5.194, 3.339, 2.161, 1.296, 0.9254, 0.6457, 0.4947, ) ,
		"mcMuonErr"          :   ( 0.0, 0.0, 30.04, 24.42, 14.43, 18.57, 7.391, 5.453, 4.069, 3.093, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 10.95, 9.118, 6.469, 4.526, 2.91, 2.196, 1.429, 1.055, ) ,
		"mcZinvErr"          :   ( 0.0, 0.0, 3.68, 2.342, 1.625, 1.103, 0.7415, 0.4997, 0.3773, 0.267, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 427.0, 344.0, 155.0, 83.0, 32.0, 21.0, 8.0, 5.0, ) ,
		"nHad"               :   ( 0.0, 0.0, 458.0, 265.0, 129.0, 59.0, 19.0, 12.0, 5.0, 2.0, ) ,
		"nMuon"              :   ( 0.0, 0.0, 4111.0, 2728.0, 1453.0, 753.0, 372.0, 216.0, 119.0, 69.0, ) ,
	}

        common(self)

class data_1b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcZinv"             :   ( 0.0, 0.0, 35.43, 27.79, 13.96, 6.43, 3.465, 1.978, 0.6123, 0.3129, ) ,
		"mcPhot"             :   ( 0.0, 0.0, 69.26, 56.12, 23.76, 11.36, 7.275, 1.91, 1.217, 0.3616, ) ,
		"mcHad"              :   ( 0.0, 0.0, 196.9, 117.8, 51.35, 20.87, 8.956, 4.803, 1.692, 0.9791, ) ,
		"mcTtw"              :   ( 0.0, 0.0, 161.5, 90.03, 37.39, 14.44, 5.491, 2.826, 1.079, 0.6662, ) ,
		"mcMuon"             :   ( 0.0, 0.0, 2356.0, 1647.0, 836.7, 423.7, 216.1, 114.3, 60.75, 38.14, ) ,
	}

        self._mcStatError =  	{
		"mcTtwErr"           :   ( 0.0, 0.0, 5.601, 4.097, 2.701, 1.658, 1.035, 0.6732, 0.4197, 0.3412, ) ,
		"mcHadErr"           :   ( 0.0, 0.0, 5.782, 4.204, 2.776, 1.713, 1.085, 0.7179, 0.44, 0.3535, ) ,
		"mcMuonErr"          :   ( 0.0, 0.0, 26.07, 17.86, 12.37, 8.758, 6.15, 4.532, 3.241, 2.6, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 4.525, 3.96, 2.553, 1.696, 1.365, 0.6952, 0.5951, 0.2882, ) ,
		"mcZinvErr"          :   ( 0.0, 0.0, 1.437, 0.9407, 0.6398, 0.4325, 0.3227, 0.2492, 0.1322, 0.09242, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 98.0, 77.0, 33.0, 13.0, 7.0, 3.0, 4.0, 2.0, ) ,
		"nHad"               :   ( 0.0, 0.0, 189.0, 109.0, 40.0, 13.0, 8.0, 4.0, 2.0, 0.0, ) ,
		"nMuon"              :   ( 0.0, 0.0, 2408.0, 1697.0, 757.0, 382.0, 182.0, 88.0, 64.0, 33.0, ) ,
	}

        common(self)


class data_1b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcZinv"             :   ( 0.0, 0.0, 179.1, 61.2, 22.21, 7.182, 3.186, 1.568, 0.5463, 0.2949, ) ,
		"mcPhot"             :   ( 0.0, 0.0, 364.4, 128.0, 47.59, 19.28, 8.163, 4.728, 1.812, 1.0, ) ,
		"mcHad"              :   ( 0.0, 0.0, 411.9, 117.0, 38.84, 11.3, 5.1, 2.066, 0.6615, 0.4426, ) ,
		"mcTtw"              :   ( 0.0, 0.0, 232.8, 55.79, 16.62, 4.12, 1.914, 0.4982, 0.1152, 0.1477, ) ,
		"mcMuon"             :   ( 0.0, 0.0, 2340.0, 756.2, 307.3, 142.7, 73.27, 36.93, 19.81, 13.39, ) ,
	}

        self._mcStatError =  	{
		"mcTtwErr"           :   ( 0.0, 0.0, 6.466, 3.107, 1.717, 0.7759, 0.4737, 0.2532, 0.09405, 0.1163, ) ,
		"mcHadErr"           :   ( 0.0, 0.0, 7.107, 3.396, 1.909, 0.9061, 0.5677, 0.3397, 0.1568, 0.1481, ) ,
		"mcMuonErr"          :   ( 0.0, 0.0, 22.03, 11.53, 7.094, 4.837, 3.412, 2.436, 1.758, 1.489, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 10.33, 5.972, 3.614, 2.336, 1.517, 1.265, 0.7165, 0.5109, ) ,
		"mcZinvErr"          :   ( 0.0, 0.0, 2.949, 1.371, 0.8326, 0.4679, 0.3128, 0.2265, 0.1255, 0.09162, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 444.0, 144.0, 49.0, 15.0, 6.0, 4.0, 1.0, 0.0, ) ,
		"nHad"               :   ( 0.0, 0.0, 414.0, 93.0, 31.0, 11.0, 3.0, 2.0, 1.0, 0.0, ) ,
		"nMuon"              :   ( 0.0, 0.0, 2409.0, 828.0, 333.0, 142.0, 49.0, 34.0, 18.0, 14.0, ) ,
	}

        common(self)


class data_2b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcZinv"             :   ( 0.0, 0.0, 6.695, 4.469, 2.054, 1.019, 0.4301, 0.225, 0.05916, 0.09011, ) ,
		"mcPhot"             :   ( 0.0, 0.0, 9.92, 6.953, 5.146, 1.543, 1.032, 0.2882, 0.2751, 0.2335, ) ,
		"mcHad"              :   ( 0.0, 0.0, 80.39, 50.27, 19.85, 7.98, 2.435, 1.645, 0.7703, 0.4191, ) ,
		"mcTtw"              :   ( 0.0, 0.0, 73.69, 45.8, 17.79, 6.961, 2.005, 1.42, 0.7111, 0.329, ) ,
		"mcMuon"             :   ( 0.0, 0.0, 1036.0, 796.1, 411.9, 195.4, 111.4, 57.49, 28.38, 15.47, ) ,
	}

        self._mcStatError =  	{
		"mcTtwErr"           :   ( 0.0, 0.0, 3.598, 2.97, 1.897, 1.213, 0.5984, 0.4659, 0.3662, 0.2351, ) ,
		"mcHadErr"           :   ( 0.0, 0.0, 3.65, 2.992, 1.911, 1.224, 0.6076, 0.4754, 0.3686, 0.241, ) ,
		"mcMuonErr"          :   ( 0.0, 0.0, 13.69, 11.83, 8.436, 5.763, 4.577, 3.204, 2.262, 1.659, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 1.62, 1.358, 1.153, 0.5959, 0.5216, 0.2882, 0.2518, 0.2335, ) ,
		"mcZinvErr"          :   ( 0.0, 0.0, 0.6165, 0.3573, 0.2303, 0.1633, 0.1053, 0.09473, 0.04251, 0.053, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 19.0, 17.0, 10.0, 4.0, 0.0, 2.0, 1.0, 0.0, ) ,
		"nHad"               :   ( 0.0, 0.0, 75.0, 45.0, 26.0, 10.0, 1.0, 3.0, 0.0, 1.0, ) ,
		"nMuon"              :   ( 0.0, 0.0, 1066.0, 756.0, 418.0, 194.0, 87.0, 46.0, 12.0, 8.0, ) ,
	}

        common(self)


class data_2b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcZinv"             :   ( 0.0, 0.0, 17.71, 6.006, 1.621, 0.3391, 0.1997, 0.05497, 0.03504, 0.002728, ) ,
		"mcPhot"             :   ( 0.0, 0.0, 29.61, 9.416, 3.192, 1.689, 0.4604, 0.0, 0.2949, 0.0, ) ,
		"mcHad"              :   ( 0.0, 0.0, 68.77, 19.55, 4.9, 1.773, 0.1997, 0.05497, 0.03504, 0.002728, ) ,
		"mcTtw"              :   ( 0.0, 0.0, 51.07, 13.54, 3.279, 1.434, 0.0, 0.0, 0.0, 0.0, ) ,
		"mcMuon"             :   ( 0.0, 0.0, 326.3, 99.85, 38.03, 17.08, 10.74, 6.049, 1.99, 1.149, ) ,
	}

        self._mcStatError =  	{
		"mcTtwErr"           :   ( 0.0, 0.0, 2.949, 1.591, 0.7783, 0.5434, 0.0, 0.0, 0.0, 0.0, ) ,
		"mcHadErr"           :   ( 0.0, 0.0, 3.08, 1.642, 0.8096, 0.5512, 0.07248, 0.03893, 0.02452, 0.002728, ) ,
		"mcMuonErr"          :   ( 0.0, 0.0, 7.757, 4.289, 2.64, 1.806, 1.437, 1.124, 0.5304, 0.4356, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 3.013, 1.526, 0.8675, 0.7153, 0.326, 0.0, 0.2949, 0.0, ) ,
		"mcZinvErr"          :   ( 0.0, 0.0, 0.8904, 0.4074, 0.223, 0.09234, 0.07248, 0.03893, 0.02452, 0.002728, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 36.0, 8.0, 4.0, 0.0, 0.0, 1.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 0.0, 0.0, 75.0, 18.0, 7.0, 3.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 0.0, 0.0, 336.0, 93.0, 39.0, 13.0, 6.0, 1.0, 0.0, 3.0, ) ,
	}

        common(self)


class data_3b_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcZinv"             :   ( 0.0, 0.0, 0.1347, 0.2406, 0.0917, 0.1404, 0.0, 0.05254, 0.0, 0.0, ) ,
		"mcPhot"             :   ( 0.0, 0.0, 1.008, 0.0, 0.2235, 0.3149, 0.0, 0.0, 0.0, 0.0, ) ,
		"mcHad"              :   ( 0.0, 0.0, 7.853, 3.249, 1.505, 0.5574, 0.1595, 0.341, 0.0, 0.0, ) ,
		"mcTtw"              :   ( 0.0, 0.0, 7.718, 3.008, 1.413, 0.417, 0.1595, 0.2884, 0.0, 0.0, ) ,
		"mcMuon"             :   ( 0.0, 0.0, 65.17, 63.73, 35.66, 21.44, 9.777, 7.178, 4.099, 2.572, ) ,
	}

        self._mcStatError =  	{
		"mcTtwErr"           :   ( 0.0, 0.0, 1.123, 0.6832, 0.4637, 0.2523, 0.1595, 0.2884, 0.0, 0.0, ) ,
		"mcHadErr"           :   ( 0.0, 0.0, 1.125, 0.6877, 0.4662, 0.2609, 0.1595, 0.291, 0.0, 0.0, ) ,
		"mcMuonErr"          :   ( 0.0, 0.0, 3.411, 3.347, 2.462, 1.854, 1.399, 1.204, 1.025, 0.6604, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.5055, 0.0, 0.2235, 0.3149, 0.0, 0.0, 0.0, 0.0, ) ,
		"mcZinvErr"          :   ( 0.0, 0.0, 0.06163, 0.07852, 0.04828, 0.06653, 0.0, 0.03827, 0.0, 0.0, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 0.0, 0.0, 12.0, 4.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 0.0, 0.0, 77.0, 80.0, 44.0, 25.0, 8.0, 4.0, 4.0, 4.0, ) ,
	}

        common(self)


class data_3b_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcZinv"             :   ( 0.0, 0.0, 0.3351, 0.1069, 0.0225, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"mcPhot"             :   ( 0.0, 0.0, 0.6296, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"mcHad"              :   ( 0.0, 0.0, 3.353, 0.4383, 0.0225, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"mcTtw"              :   ( 0.0, 0.0, 3.018, 0.3314, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"mcMuon"             :   ( 0.0, 0.0, 7.117, 1.934, 0.1175, 0.436, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        self._mcStatError =  	{
		"mcTtwErr"           :   ( 0.0, 0.0, 0.6564, 0.2443, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"mcHadErr"           :   ( 0.0, 0.0, 0.667, 0.252, 0.0225, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"mcMuonErr"          :   ( 0.0, 0.0, 1.179, 0.5462, 0.1175, 0.2662, 0.0, 0.0, 0.0, 0.0, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 0.4733, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"mcZinvErr"          :   ( 0.0, 0.0, 0.1188, 0.06182, 0.0225, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nHad"               :   ( 0.0, 0.0, 7.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
		"nMuon"              :   ( 0.0, 0.0, 6.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ) ,
	}

        common(self)

class data_ge55_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcMuon"             :   ( 0.0, 0.0, 168.4, 92.87, 46.99, 21.24, 10.07, 3.849, 1.598, 2.152, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 0.0, 0.0, 5.369, 3.751, 2.64, 1.868, 1.22, 0.8267, 0.3799, 0.4802, ) ,
	}

        self._observations =  	{
		"nMuon"              :   ( 0.0, 0.0, 175.0, 99.0, 34.0, 15.0, 7.0, 5.0, 3.0, 1.0, ) ,
	}

        common(self)


class data_ge55_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcMuon"             :   ( 0.0, 0.0, 310.5, 85.11, 28.7, 10.98, 4.857, 1.586, 0.8533, 1.204, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 0.0, 0.0, 6.997, 3.265, 1.869, 1.093, 0.7152, 0.4119, 0.2876, 0.3281, ) ,
	}

        self._observations =  	{
		"nMuon"              :   ( 0.0, 0.0, 242.0, 70.0, 21.0, 11.0, 7.0, 0.0, 0.0, 1.0, ) ,
	}

        common(self)


class data_l55_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcMuon"             :   ( 0.0, 0.0, 7796.0, 5561.0, 2871.0, 1483.0, 778.0, 425.3, 231.5, 352.3, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 0.0, 0.0, 42.31, 32.71, 20.95, 21.52, 10.74, 7.878, 5.766, 7.117, ) ,
	}

        self._observations =  	{
		"nMuon"              :   ( 0.0, 0.0, 7660.0, 5262.0, 2673.0, 1353.0, 649.0, 355.0, 199.0, 322.0, ) ,
	}

        common(self)


class data_l55_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcMuon"             :   ( 0.0, 0.0, 2.172e+04, 7455.0, 2994.0, 1353.0, 666.7, 341.8, 183.9, 266.0, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 0.0, 0.0, 67.55, 33.68, 19.91, 12.86, 8.763, 6.277, 4.436, 5.224, ) ,
	}

        self._observations =  	{
		"nMuon"              :   ( 0.0, 0.0, 2.028e+04, 7156.0, 2825.0, 1160.0, 580.0, 291.0, 129.0, 231.0, ) ,
	}

        common(self)

class data_ge4j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger = {
		"mcPhot"             :   ( 0.0, 0.0, 486.3, 381.2, 188.6, 93.22, 40.1, 20.12, 8.934, 10.02, ) ,
		"mcMuon"             :   ( 0.0, 0.0, 7729.0, 5495.0, 2834.0, 1460.0, 768.1, 417.7, 227.3, 346.7, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 0.0, 0.0, 42.17, 32.53, 20.79, 21.44, 10.65, 7.78, 5.673, 7.047, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 11.95, 10.03, 7.05, 4.87, 3.257, 2.321, 1.568, 1.607, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 544.0, 438.0, 198.0, 100.0, 39.0, 26.0, 13.0, 16.0, ) ,
		"nMuon"              :   ( 0.0, 0.0, 7581.0, 5180.0, 2627.0, 1328.0, 641.0, 350.0, 195.0, 318.0, ) ,
	}

        common(self)


class data_le3j(data) :
    def _fill(self) :
        self._mcExpectationsBeforeTrigger =  	{
		"mcPhot"             :   ( 0.0, 0.0, 4161.0, 1457.0, 516.2, 208.7, 77.85, 32.95, 18.39, 15.74, ) ,
		"mcMuon"             :   ( 0.0, 0.0, 2.171e+04, 7453.0, 2994.0, 1352.0, 666.7, 341.8, 183.9, 265.7, ) ,
	}

        self._mcStatError =  	{
		"mcMuonErr"          :   ( 0.0, 0.0, 67.54, 33.67, 19.91, 12.85, 8.763, 6.277, 4.436, 5.22, ) ,
		"mcPhotErr"          :   ( 0.0, 0.0, 34.48, 19.46, 11.61, 7.401, 4.497, 2.987, 2.188, 2.081, ) ,
	}

        self._observations =  	{
		"nPhot"              :   ( 0.0, 0.0, 4480.0, 1358.0, 461.0, 142.0, 56.0, 27.0, 11.0, 12.0, ) ,
		"nMuon"              :   ( 0.0, 0.0, 2.027e+04, 7155.0, 2825.0, 1160.0, 580.0, 291.0, 129.0, 231.0, ) ,
	}

        common(self)
